{"ast":null,"code":"var _jsxFileName = \"/Users/albertqi/Desktop/Directory/CampusContact/client/src/pages/Script.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport './Script.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Script() {\n  _s();\n\n  const navigate = useNavigate();\n  const initialScript = useLocation().state;\n  const [script, setScript] = useState(initialScript);\n  const [contacts, setContacts] = useState([]);\n  const [contactIndex, setContactIndex] = useState(0);\n  const [replacedBody, setReplacedBody] = useState(\"\"); // Get all contacts\n\n  const getContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/contacts\");\n      const jsonData = await response.json();\n      setContacts(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const updateBody = () => {\n    var updatedBody = script.body;\n    if (contacts[contactIndex] == null) return;\n    const {\n      first_name,\n      last_name,\n      house,\n      suite,\n      class_year,\n      city,\n      state,\n      contact_status,\n      pte_status,\n      registration_status,\n      stage_of_voting_process\n    } = contacts[contactIndex];\n    const arr = [first_name, last_name, house, suite, class_year, city, state, contact_status, pte_status, registration_status, stage_of_voting_process];\n    const fieldValues = [\"{first_name}\", \"{last_name}\", \"{house}\", \"{suite}\", \"{class_year}\", \"{city}\", \"{state}\", \"{contact_status}\", \"{pte_status}\", \"{registration_status}\", \"{stage_of_voting_process}\"];\n\n    for (let i = 0; i < fieldValues.length; i++) {\n      updatedBody = updatedBody.replaceAll(fieldValues[i], arr[i]);\n    }\n\n    setReplacedBody(updatedBody);\n  };\n\n  const prev = () => {\n    if (contactIndex - 1 < 0) return;\n    setContactIndex(contactIndex - 1);\n  };\n\n  const next = () => {\n    if (contactIndex + 1 >= contacts.length) return;\n    setContactIndex(contactIndex + 1);\n  };\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n  useEffect(() => {\n    updateBody();\n  }, [contactIndex]);\n  useEffect(() => {\n    updateBody();\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"script text-base\",\n      children: replacedBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: prev,\n      className: \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-3 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: next,\n      className: \"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-3 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Script, \"09undOnAyGJtkZUGQTBT2EjVWL0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Script;\nexport default Script;\n\nvar _c;\n\n$RefreshReg$(_c, \"Script\");","map":{"version":3,"sources":["/Users/albertqi/Desktop/Directory/CampusContact/client/src/pages/Script.js"],"names":["useEffect","useState","useNavigate","useLocation","Script","navigate","initialScript","state","script","setScript","contacts","setContacts","contactIndex","setContactIndex","replacedBody","setReplacedBody","getContacts","response","fetch","jsonData","json","err","console","error","message","updateBody","updatedBody","body","first_name","last_name","house","suite","class_year","city","contact_status","pte_status","registration_status","stage_of_voting_process","arr","fieldValues","i","length","replaceAll","prev","next"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport './Script.css';\n\nfunction Script() {\n    const navigate = useNavigate();\n    const initialScript = useLocation().state;\n\n    const [script, setScript] = useState(initialScript);\n    const [contacts, setContacts] = useState([]);\n    const [contactIndex, setContactIndex] = useState(0);\n    const [replacedBody, setReplacedBody] = useState(\"\");\n\n    // Get all contacts\n    const getContacts = async () => {\n        try {\n            const response = await fetch(\"http://localhost:8000/contacts\");\n            const jsonData = await response.json();\n\n            setContacts(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    const updateBody = () => {\n        var updatedBody = script.body;\n        if (contacts[contactIndex] == null) return;\n        const { first_name, last_name, house, suite, class_year, city, state,\n            contact_status, pte_status, registration_status, stage_of_voting_process } =\n            contacts[contactIndex];\n        const arr = [first_name, last_name, house, suite, class_year, city, state,\n            contact_status, pte_status, registration_status, stage_of_voting_process];\n        const fieldValues = [\"{first_name}\", \"{last_name}\", \"{house}\", \"{suite}\", \"{class_year}\",\n            \"{city}\", \"{state}\", \"{contact_status}\", \"{pte_status}\", \"{registration_status}\", \"{stage_of_voting_process}\"];\n        for (let i = 0; i < fieldValues.length; i++) {\n            updatedBody = updatedBody.replaceAll(fieldValues[i], arr[i]);\n        }\n        setReplacedBody(updatedBody);\n    };\n\n    const prev = () => {\n        if (contactIndex - 1 < 0) return;\n        setContactIndex(contactIndex - 1);\n    }\n\n    const next = () => {\n        if (contactIndex + 1 >= contacts.length) return;\n        setContactIndex(contactIndex + 1);\n    };\n\n    useEffect(() => {\n        getContacts();\n    }, []);\n\n    useEffect(() => {\n        updateBody();\n    }, [contactIndex]);\n\n    useEffect(() => {\n        updateBody();\n    }, [contacts]);\n\n    return (\n        <>\n            <p className=\"script text-base\">{replacedBody}</p>\n            <button type=\"button\" onClick={prev} className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-3 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Previous</button>\n            <button type=\"button\" onClick={next} className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-3 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Next</button>\n        </>\n    );\n}\n\nexport default Script;\n"]},"metadata":{},"sourceType":"module"}