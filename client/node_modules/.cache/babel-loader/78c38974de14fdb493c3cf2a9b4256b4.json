{"ast":null,"code":"import { isInRange } from '../lib/utils.js';\nimport { addDays, addMonths, addYears, startOfYearPeriod } from '../lib/date.js';\nimport { goToPrevOrNext, switchView, unfocus } from './functions.js'; // Find the closest date that doesn't meet the condition for unavailable date\n// Returns undefined if no available date is found\n// addFn: function to calculate the next date\n//   - args: time value, amount\n// increase: amount to pass to addFn\n// testFn: function to test the unavailablity of the date\n//   - args: time value; retun: true if unavailable\n\nfunction findNextAvailableOne(date, addFn, increase, testFn, min, max) {\n  if (!isInRange(date, min, max)) {\n    return;\n  }\n\n  if (testFn(date)) {\n    const newDate = addFn(date, increase);\n    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);\n  }\n\n  return date;\n} // direction: -1 (left/up), 1 (right/down)\n// vertical: true for up/down, false for left/right\n\n\nfunction moveByArrowKey(datepicker, ev, direction, vertical) {\n  const picker = datepicker.picker;\n  const currentView = picker.currentView;\n  const step = currentView.step || 1;\n  let viewDate = picker.viewDate;\n  let addFn;\n  let testFn;\n\n  switch (currentView.id) {\n    case 0:\n      if (vertical) {\n        viewDate = addDays(viewDate, direction * 7);\n      } else if (ev.ctrlKey || ev.metaKey) {\n        viewDate = addYears(viewDate, direction);\n      } else {\n        viewDate = addDays(viewDate, direction);\n      }\n\n      addFn = addDays;\n\n      testFn = date => currentView.disabled.includes(date);\n\n      break;\n\n    case 1:\n      viewDate = addMonths(viewDate, vertical ? direction * 4 : direction);\n      addFn = addMonths;\n\n      testFn = date => {\n        const dt = new Date(date);\n        const {\n          year,\n          disabled\n        } = currentView;\n        return dt.getFullYear() === year && disabled.includes(dt.getMonth());\n      };\n\n      break;\n\n    default:\n      viewDate = addYears(viewDate, direction * (vertical ? 4 : 1) * step);\n      addFn = addYears;\n\n      testFn = date => currentView.disabled.includes(startOfYearPeriod(date, step));\n\n  }\n\n  viewDate = findNextAvailableOne(viewDate, addFn, direction < 0 ? -step : step, testFn, currentView.minDate, currentView.maxDate);\n\n  if (viewDate !== undefined) {\n    picker.changeFocus(viewDate).render();\n  }\n}\n\nexport function onKeydown(datepicker, ev) {\n  if (ev.key === 'Tab') {\n    unfocus(datepicker);\n    return;\n  }\n\n  const picker = datepicker.picker;\n  const {\n    id,\n    isMinView\n  } = picker.currentView;\n\n  if (!picker.active) {\n    switch (ev.key) {\n      case 'ArrowDown':\n      case 'Escape':\n        picker.show();\n        break;\n\n      case 'Enter':\n        datepicker.update();\n        break;\n\n      default:\n        return;\n    }\n  } else if (datepicker.editMode) {\n    switch (ev.key) {\n      case 'Escape':\n        picker.hide();\n        break;\n\n      case 'Enter':\n        datepicker.exitEditMode({\n          update: true,\n          autohide: datepicker.config.autohide\n        });\n        break;\n\n      default:\n        return;\n    }\n  } else {\n    switch (ev.key) {\n      case 'Escape':\n        picker.hide();\n        break;\n\n      case 'ArrowLeft':\n        if (ev.ctrlKey || ev.metaKey) {\n          goToPrevOrNext(datepicker, -1);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, -1, false);\n        }\n\n        break;\n\n      case 'ArrowRight':\n        if (ev.ctrlKey || ev.metaKey) {\n          goToPrevOrNext(datepicker, 1);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, 1, false);\n        }\n\n        break;\n\n      case 'ArrowUp':\n        if (ev.ctrlKey || ev.metaKey) {\n          switchView(datepicker);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, -1, true);\n        }\n\n        break;\n\n      case 'ArrowDown':\n        if (ev.shiftKey && !ev.ctrlKey && !ev.metaKey) {\n          datepicker.enterEditMode();\n          return;\n        }\n\n        moveByArrowKey(datepicker, ev, 1, true);\n        break;\n\n      case 'Enter':\n        if (isMinView) {\n          datepicker.setDate(picker.viewDate);\n        } else {\n          picker.changeView(id - 1).render();\n        }\n\n        break;\n\n      case 'Backspace':\n      case 'Delete':\n        datepicker.enterEditMode();\n        return;\n\n      default:\n        if (ev.key.length === 1 && !ev.ctrlKey && !ev.metaKey) {\n          datepicker.enterEditMode();\n        }\n\n        return;\n    }\n  }\n\n  ev.preventDefault();\n  ev.stopPropagation();\n}\nexport function onFocus(datepicker) {\n  if (datepicker.config.showOnFocus && !datepicker._showing) {\n    datepicker.show();\n  }\n} // for the prevention for entering edit mode while getting focus on click\n\nexport function onMousedown(datepicker, ev) {\n  const el = ev.target;\n\n  if (datepicker.picker.active || datepicker.config.showOnClick) {\n    el._active = el === document.activeElement;\n    el._clicking = setTimeout(() => {\n      delete el._active;\n      delete el._clicking;\n    }, 2000);\n  }\n}\nexport function onClickInput(datepicker, ev) {\n  const el = ev.target;\n\n  if (!el._clicking) {\n    return;\n  }\n\n  clearTimeout(el._clicking);\n  delete el._clicking;\n\n  if (el._active) {\n    datepicker.enterEditMode();\n  }\n\n  delete el._active;\n\n  if (datepicker.config.showOnClick) {\n    datepicker.show();\n  }\n}\nexport function onPaste(datepicker, ev) {\n  if (ev.clipboardData.types.includes('text/plain')) {\n    datepicker.enterEditMode();\n  }\n}","map":{"version":3,"sources":["/Users/albertqi/Desktop/Directory/CampusContact/client/node_modules/@themesberg/tailwind-datepicker/js/events/inputFieldListeners.js"],"names":["isInRange","addDays","addMonths","addYears","startOfYearPeriod","goToPrevOrNext","switchView","unfocus","findNextAvailableOne","date","addFn","increase","testFn","min","max","newDate","moveByArrowKey","datepicker","ev","direction","vertical","picker","currentView","step","viewDate","id","ctrlKey","metaKey","disabled","includes","dt","Date","year","getFullYear","getMonth","minDate","maxDate","undefined","changeFocus","render","onKeydown","key","isMinView","active","show","update","editMode","hide","exitEditMode","autohide","config","shiftKey","enterEditMode","setDate","changeView","length","preventDefault","stopPropagation","onFocus","showOnFocus","_showing","onMousedown","el","target","showOnClick","_active","document","activeElement","_clicking","setTimeout","onClickInput","clearTimeout","onPaste","clipboardData","types"],"mappings":"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","sourcesContent":["import {isInRange} from '../lib/utils.js';\nimport {addDays, addMonths, addYears, startOfYearPeriod} from '../lib/date.js';\nimport {goToPrevOrNext, switchView, unfocus} from './functions.js';\n\n// Find the closest date that doesn't meet the condition for unavailable date\n// Returns undefined if no available date is found\n// addFn: function to calculate the next date\n//   - args: time value, amount\n// increase: amount to pass to addFn\n// testFn: function to test the unavailablity of the date\n//   - args: time value; retun: true if unavailable\nfunction findNextAvailableOne(date, addFn, increase, testFn, min, max) {\n  if (!isInRange(date, min, max)) {\n    return;\n  }\n  if (testFn(date)) {\n    const newDate = addFn(date, increase);\n    return findNextAvailableOne(newDate, addFn, increase, testFn, min, max);\n  }\n  return date;\n}\n\n// direction: -1 (left/up), 1 (right/down)\n// vertical: true for up/down, false for left/right\nfunction moveByArrowKey(datepicker, ev, direction, vertical) {\n  const picker = datepicker.picker;\n  const currentView = picker.currentView;\n  const step = currentView.step || 1;\n  let viewDate = picker.viewDate;\n  let addFn;\n  let testFn;\n  switch (currentView.id) {\n    case 0:\n      if (vertical) {\n        viewDate = addDays(viewDate, direction * 7);\n      } else if (ev.ctrlKey || ev.metaKey) {\n        viewDate = addYears(viewDate, direction);\n      } else {\n        viewDate = addDays(viewDate, direction);\n      }\n      addFn = addDays;\n      testFn = (date) => currentView.disabled.includes(date);\n      break;\n    case 1:\n      viewDate = addMonths(viewDate, vertical ? direction * 4 : direction);\n      addFn = addMonths;\n      testFn = (date) => {\n        const dt = new Date(date);\n        const {year, disabled} = currentView;\n        return dt.getFullYear() === year && disabled.includes(dt.getMonth());\n      };\n      break;\n    default:\n      viewDate = addYears(viewDate, direction * (vertical ? 4 : 1) * step);\n      addFn = addYears;\n      testFn = date => currentView.disabled.includes(startOfYearPeriod(date, step));\n  }\n  viewDate = findNextAvailableOne(\n    viewDate,\n    addFn,\n    direction < 0 ? -step : step,\n    testFn,\n    currentView.minDate,\n    currentView.maxDate\n  );\n  if (viewDate !== undefined) {\n    picker.changeFocus(viewDate).render();\n  }\n}\n\nexport function onKeydown(datepicker, ev) {\n  if (ev.key === 'Tab') {\n    unfocus(datepicker);\n    return;\n  }\n\n  const picker = datepicker.picker;\n  const {id, isMinView} = picker.currentView;\n  if (!picker.active) {\n    switch (ev.key) {\n      case 'ArrowDown':\n      case 'Escape':\n        picker.show();\n        break;\n      case 'Enter':\n        datepicker.update();\n        break;\n      default:\n        return;\n    }\n  } else if (datepicker.editMode) {\n    switch (ev.key) {\n      case 'Escape':\n        picker.hide();\n        break;\n      case 'Enter':\n        datepicker.exitEditMode({update: true, autohide: datepicker.config.autohide});\n        break;\n      default:\n        return;\n    }\n  } else {\n    switch (ev.key) {\n      case 'Escape':\n        picker.hide();\n        break;\n      case 'ArrowLeft':\n        if (ev.ctrlKey || ev.metaKey) {\n          goToPrevOrNext(datepicker, -1);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, -1, false);\n        }\n        break;\n      case 'ArrowRight':\n        if (ev.ctrlKey || ev.metaKey) {\n          goToPrevOrNext(datepicker, 1);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, 1, false);\n        }\n        break;\n      case 'ArrowUp':\n        if (ev.ctrlKey || ev.metaKey) {\n          switchView(datepicker);\n        } else if (ev.shiftKey) {\n          datepicker.enterEditMode();\n          return;\n        } else {\n          moveByArrowKey(datepicker, ev, -1, true);\n        }\n        break;\n      case 'ArrowDown':\n        if (ev.shiftKey && !ev.ctrlKey && !ev.metaKey) {\n          datepicker.enterEditMode();\n          return;\n        }\n        moveByArrowKey(datepicker, ev, 1, true);\n        break;\n      case 'Enter':\n        if (isMinView) {\n          datepicker.setDate(picker.viewDate);\n        } else {\n          picker.changeView(id - 1).render();\n        }\n        break;\n      case 'Backspace':\n      case 'Delete':\n        datepicker.enterEditMode();\n        return;\n      default:\n        if (ev.key.length === 1 && !ev.ctrlKey && !ev.metaKey) {\n          datepicker.enterEditMode();\n        }\n        return;\n    }\n  }\n  ev.preventDefault();\n  ev.stopPropagation();\n}\n\nexport function onFocus(datepicker) {\n  if (datepicker.config.showOnFocus && !datepicker._showing) {\n    datepicker.show();\n  }\n}\n\n// for the prevention for entering edit mode while getting focus on click\nexport function onMousedown(datepicker, ev) {\n  const el = ev.target;\n  if (datepicker.picker.active || datepicker.config.showOnClick) {\n    el._active = el === document.activeElement;\n    el._clicking = setTimeout(() => {\n      delete el._active;\n      delete el._clicking;\n    }, 2000);\n  }\n}\n\nexport function onClickInput(datepicker, ev) {\n  const el = ev.target;\n  if (!el._clicking) {\n    return;\n  }\n  clearTimeout(el._clicking);\n  delete el._clicking;\n\n  if (el._active) {\n    datepicker.enterEditMode();\n  }\n  delete el._active;\n\n  if (datepicker.config.showOnClick) {\n    datepicker.show();\n  }\n}\n\nexport function onPaste(datepicker, ev) {\n  if (ev.clipboardData.types.includes('text/plain')) {\n    datepicker.enterEditMode();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}