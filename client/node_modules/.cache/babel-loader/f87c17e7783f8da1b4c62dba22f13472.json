{"ast":null,"code":"import { hasProperty, lastItemOf, isInRange, limitToRange } from '../lib/utils.js';\nimport { today } from '../lib/date.js';\nimport { parseHTML, showElement, hideElement, emptyChildNodes } from '../lib/dom.js';\nimport { registerListeners } from '../lib/event.js';\nimport pickerTemplate from './templates/pickerTemplate.js';\nimport DaysView from './views/DaysView.js';\nimport MonthsView from './views/MonthsView.js';\nimport YearsView from './views/YearsView.js';\nimport { triggerDatepickerEvent } from '../events/functions.js';\nimport { onClickTodayBtn, onClickClearBtn, onClickViewSwitch, onClickPrevBtn, onClickNextBtn, onClickView, onClickPicker } from '../events/pickerListeners.js';\n\nfunction processPickerOptions(picker, options) {\n  if (options.title !== undefined) {\n    if (options.title) {\n      picker.controls.title.textContent = options.title;\n      showElement(picker.controls.title);\n    } else {\n      picker.controls.title.textContent = '';\n      hideElement(picker.controls.title);\n    }\n  }\n\n  if (options.prevArrow) {\n    const prevBtn = picker.controls.prevBtn;\n    emptyChildNodes(prevBtn);\n    options.prevArrow.forEach(node => {\n      prevBtn.appendChild(node.cloneNode(true));\n    });\n  }\n\n  if (options.nextArrow) {\n    const nextBtn = picker.controls.nextBtn;\n    emptyChildNodes(nextBtn);\n    options.nextArrow.forEach(node => {\n      nextBtn.appendChild(node.cloneNode(true));\n    });\n  }\n\n  if (options.locale) {\n    picker.controls.todayBtn.textContent = options.locale.today;\n    picker.controls.clearBtn.textContent = options.locale.clear;\n  }\n\n  if (options.todayBtn !== undefined) {\n    if (options.todayBtn) {\n      showElement(picker.controls.todayBtn);\n    } else {\n      hideElement(picker.controls.todayBtn);\n    }\n  }\n\n  if (hasProperty(options, 'minDate') || hasProperty(options, 'maxDate')) {\n    const {\n      minDate,\n      maxDate\n    } = picker.datepicker.config;\n    picker.controls.todayBtn.disabled = !isInRange(today(), minDate, maxDate);\n  }\n\n  if (options.clearBtn !== undefined) {\n    if (options.clearBtn) {\n      showElement(picker.controls.clearBtn);\n    } else {\n      hideElement(picker.controls.clearBtn);\n    }\n  }\n} // Compute view date to reset, which will be...\n// - the last item of the selected dates or defaultViewDate if no selection\n// - limitted to minDate or maxDate if it exceeds the range\n\n\nfunction computeResetViewDate(datepicker) {\n  const {\n    dates,\n    config\n  } = datepicker;\n  const viewDate = dates.length > 0 ? lastItemOf(dates) : config.defaultViewDate;\n  return limitToRange(viewDate, config.minDate, config.maxDate);\n} // Change current view's view date\n\n\nfunction setViewDate(picker, newDate) {\n  const oldViewDate = new Date(picker.viewDate);\n  const newViewDate = new Date(newDate);\n  const {\n    id,\n    year,\n    first,\n    last\n  } = picker.currentView;\n  const viewYear = newViewDate.getFullYear();\n  picker.viewDate = newDate;\n\n  if (viewYear !== oldViewDate.getFullYear()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeYear');\n  }\n\n  if (newViewDate.getMonth() !== oldViewDate.getMonth()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeMonth');\n  } // return whether the new date is in different period on time from the one\n  // displayed in the current view\n  // when true, the view needs to be re-rendered on the next UI refresh.\n\n\n  switch (id) {\n    case 0:\n      return newDate < first || newDate > last;\n\n    case 1:\n      return viewYear !== year;\n\n    default:\n      return viewYear < first || viewYear > last;\n  }\n}\n\nfunction getTextDirection(el) {\n  return window.getComputedStyle(el).direction;\n} // Class representing the picker UI\n\n\nexport default class Picker {\n  constructor(datepicker) {\n    this.datepicker = datepicker;\n    const template = pickerTemplate.replace(/%buttonClass%/g, datepicker.config.buttonClass);\n    const element = this.element = parseHTML(template).firstChild;\n    const [header, main, footer] = element.firstChild.children;\n    const title = header.firstElementChild;\n    const [prevBtn, viewSwitch, nextBtn] = header.lastElementChild.children;\n    const [todayBtn, clearBtn] = footer.firstChild.children;\n    const controls = {\n      title,\n      prevBtn,\n      viewSwitch,\n      nextBtn,\n      todayBtn,\n      clearBtn\n    };\n    this.main = main;\n    this.controls = controls;\n    const elementClass = datepicker.inline ? 'inline' : 'dropdown';\n    element.classList.add(`datepicker-${elementClass}`);\n    elementClass === 'dropdown' ? element.classList.add('dropdown', 'absolute', 'top-0', 'left-0', 'z-20', 'pt-2') : null;\n    processPickerOptions(this, datepicker.config);\n    this.viewDate = computeResetViewDate(datepicker); // set up event listeners\n\n    registerListeners(datepicker, [[element, 'click', onClickPicker.bind(null, datepicker), {\n      capture: true\n    }], [main, 'click', onClickView.bind(null, datepicker)], [controls.viewSwitch, 'click', onClickViewSwitch.bind(null, datepicker)], [controls.prevBtn, 'click', onClickPrevBtn.bind(null, datepicker)], [controls.nextBtn, 'click', onClickNextBtn.bind(null, datepicker)], [controls.todayBtn, 'click', onClickTodayBtn.bind(null, datepicker)], [controls.clearBtn, 'click', onClickClearBtn.bind(null, datepicker)]]); // set up views\n\n    this.views = [new DaysView(this), new MonthsView(this), new YearsView(this, {\n      id: 2,\n      name: 'years',\n      cellClass: 'year',\n      step: 1\n    }), new YearsView(this, {\n      id: 3,\n      name: 'decades',\n      cellClass: 'decade',\n      step: 10\n    })];\n    this.currentView = this.views[datepicker.config.startView];\n    this.currentView.render();\n    this.main.appendChild(this.currentView.element);\n    datepicker.config.container.appendChild(this.element);\n  }\n\n  setOptions(options) {\n    processPickerOptions(this, options);\n    this.views.forEach(view => {\n      view.init(options, false);\n    });\n    this.currentView.render();\n  }\n\n  detach() {\n    this.datepicker.config.container.removeChild(this.element);\n  }\n\n  show() {\n    if (this.active) {\n      return;\n    }\n\n    this.element.classList.add('active', 'block');\n    this.element.classList.remove('hidden');\n    this.active = true;\n    const datepicker = this.datepicker;\n\n    if (!datepicker.inline) {\n      // ensure picker's direction matches input's\n      const inputDirection = getTextDirection(datepicker.inputField);\n\n      if (inputDirection !== getTextDirection(datepicker.config.container)) {\n        this.element.dir = inputDirection;\n      } else if (this.element.dir) {\n        this.element.removeAttribute('dir');\n      }\n\n      this.place();\n\n      if (datepicker.config.disableTouchKeyboard) {\n        datepicker.inputField.blur();\n      }\n    }\n\n    triggerDatepickerEvent(datepicker, 'show');\n  }\n\n  hide() {\n    if (!this.active) {\n      return;\n    }\n\n    this.datepicker.exitEditMode();\n    this.element.classList.remove('active', 'block');\n    this.element.classList.add('active', 'block', 'hidden');\n    this.active = false;\n    triggerDatepickerEvent(this.datepicker, 'hide');\n  }\n\n  place() {\n    const {\n      classList,\n      style\n    } = this.element;\n    const {\n      config,\n      inputField\n    } = this.datepicker;\n    const container = config.container;\n    const {\n      width: calendarWidth,\n      height: calendarHeight\n    } = this.element.getBoundingClientRect();\n    const {\n      left: containerLeft,\n      top: containerTop,\n      width: containerWidth\n    } = container.getBoundingClientRect();\n    const {\n      left: inputLeft,\n      top: inputTop,\n      width: inputWidth,\n      height: inputHeight\n    } = inputField.getBoundingClientRect();\n    let {\n      x: orientX,\n      y: orientY\n    } = config.orientation;\n    let scrollTop;\n    let left;\n    let top;\n\n    if (container === document.body) {\n      scrollTop = window.scrollY;\n      left = inputLeft + window.scrollX;\n      top = inputTop + scrollTop;\n    } else {\n      scrollTop = container.scrollTop;\n      left = inputLeft - containerLeft;\n      top = inputTop - containerTop + scrollTop;\n    }\n\n    if (orientX === 'auto') {\n      if (left < 0) {\n        // align to the left and move into visible area if input's left edge < window's\n        orientX = 'left';\n        left = 10;\n      } else if (left + calendarWidth > containerWidth) {\n        // align to the right if canlendar's right edge > container's\n        orientX = 'right';\n      } else {\n        orientX = getTextDirection(inputField) === 'rtl' ? 'right' : 'left';\n      }\n    }\n\n    if (orientX === 'right') {\n      left -= calendarWidth - inputWidth;\n    }\n\n    if (orientY === 'auto') {\n      orientY = top - calendarHeight < scrollTop ? 'bottom' : 'top';\n    }\n\n    if (orientY === 'top') {\n      top -= calendarHeight;\n    } else {\n      top += inputHeight;\n    }\n\n    classList.remove('datepicker-orient-top', 'datepicker-orient-bottom', 'datepicker-orient-right', 'datepicker-orient-left');\n    classList.add(`datepicker-orient-${orientY}`, `datepicker-orient-${orientX}`);\n    style.top = top ? `${top}px` : top;\n    style.left = left ? `${left}px` : left;\n  }\n\n  setViewSwitchLabel(labelText) {\n    this.controls.viewSwitch.textContent = labelText;\n  }\n\n  setPrevBtnDisabled(disabled) {\n    this.controls.prevBtn.disabled = disabled;\n  }\n\n  setNextBtnDisabled(disabled) {\n    this.controls.nextBtn.disabled = disabled;\n  }\n\n  changeView(viewId) {\n    const oldView = this.currentView;\n    const newView = this.views[viewId];\n\n    if (newView.id !== oldView.id) {\n      this.currentView = newView;\n      this._renderMethod = 'render';\n      triggerDatepickerEvent(this.datepicker, 'changeView');\n      this.main.replaceChild(newView.element, oldView.element);\n    }\n\n    return this;\n  } // Change the focused date (view date)\n\n\n  changeFocus(newViewDate) {\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';\n    this.views.forEach(view => {\n      view.updateFocus();\n    });\n    return this;\n  } // Apply the change of the selected dates\n\n\n  update() {\n    const newViewDate = computeResetViewDate(this.datepicker);\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';\n    this.views.forEach(view => {\n      view.updateFocus();\n      view.updateSelection();\n    });\n    return this;\n  } // Refresh the picker UI\n\n\n  render() {\n    let quickRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    const renderMethod = quickRender && this._renderMethod || 'render';\n    delete this._renderMethod;\n    this.currentView[renderMethod]();\n  }\n\n}","map":{"version":3,"sources":["/Users/albertqi/Desktop/Directory/CampusContact/client/node_modules/@themesberg/tailwind-datepicker/js/picker/Picker.js"],"names":["hasProperty","lastItemOf","isInRange","limitToRange","today","parseHTML","showElement","hideElement","emptyChildNodes","registerListeners","pickerTemplate","DaysView","MonthsView","YearsView","triggerDatepickerEvent","onClickTodayBtn","onClickClearBtn","onClickViewSwitch","onClickPrevBtn","onClickNextBtn","onClickView","onClickPicker","processPickerOptions","picker","options","title","undefined","controls","textContent","prevArrow","prevBtn","forEach","node","appendChild","cloneNode","nextArrow","nextBtn","locale","todayBtn","clearBtn","clear","minDate","maxDate","datepicker","config","disabled","computeResetViewDate","dates","viewDate","length","defaultViewDate","setViewDate","newDate","oldViewDate","Date","newViewDate","id","year","first","last","currentView","viewYear","getFullYear","getMonth","getTextDirection","el","window","getComputedStyle","direction","Picker","constructor","template","replace","buttonClass","element","firstChild","header","main","footer","children","firstElementChild","viewSwitch","lastElementChild","elementClass","inline","classList","add","bind","capture","views","name","cellClass","step","startView","render","container","setOptions","view","init","detach","removeChild","show","active","remove","inputDirection","inputField","dir","removeAttribute","place","disableTouchKeyboard","blur","hide","exitEditMode","style","width","calendarWidth","height","calendarHeight","getBoundingClientRect","left","containerLeft","top","containerTop","containerWidth","inputLeft","inputTop","inputWidth","inputHeight","x","orientX","y","orientY","orientation","scrollTop","document","body","scrollY","scrollX","setViewSwitchLabel","labelText","setPrevBtnDisabled","setNextBtnDisabled","changeView","viewId","oldView","newView","_renderMethod","replaceChild","changeFocus","updateFocus","update","updateSelection","quickRender","renderMethod"],"mappings":"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","sourcesContent":["import {hasProperty, lastItemOf, isInRange, limitToRange} from '../lib/utils.js';\nimport {today} from '../lib/date.js';\nimport {parseHTML, showElement, hideElement, emptyChildNodes} from '../lib/dom.js';\nimport {registerListeners} from '../lib/event.js';\nimport pickerTemplate from './templates/pickerTemplate.js';\nimport DaysView from './views/DaysView.js';\nimport MonthsView from './views/MonthsView.js';\nimport YearsView from './views/YearsView.js';\nimport {triggerDatepickerEvent} from '../events/functions.js';\nimport {\n  onClickTodayBtn,\n  onClickClearBtn,\n  onClickViewSwitch,\n  onClickPrevBtn,\n  onClickNextBtn,\n  onClickView,\n  onClickPicker,\n} from '../events/pickerListeners.js';\n\nfunction processPickerOptions(picker, options) {\n  if (options.title !== undefined) {\n    if (options.title) {\n      picker.controls.title.textContent = options.title;\n      showElement(picker.controls.title);\n    } else {\n      picker.controls.title.textContent = '';\n      hideElement(picker.controls.title);\n    }\n  }\n  if (options.prevArrow) {\n    const prevBtn = picker.controls.prevBtn;\n    emptyChildNodes(prevBtn);\n    options.prevArrow.forEach((node) => {\n      prevBtn.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.nextArrow) {\n    const nextBtn = picker.controls.nextBtn;\n    emptyChildNodes(nextBtn);\n    options.nextArrow.forEach((node) => {\n      nextBtn.appendChild(node.cloneNode(true));\n    });\n  }\n  if (options.locale) {\n    picker.controls.todayBtn.textContent = options.locale.today;\n    picker.controls.clearBtn.textContent = options.locale.clear;\n  }\n  if (options.todayBtn !== undefined) {\n    if (options.todayBtn) {\n      showElement(picker.controls.todayBtn);\n    } else {\n      hideElement(picker.controls.todayBtn);\n    }\n  }\n  if (hasProperty(options, 'minDate') || hasProperty(options, 'maxDate')) {\n    const {minDate, maxDate} = picker.datepicker.config;\n    picker.controls.todayBtn.disabled = !isInRange(today(), minDate, maxDate);\n  }\n  if (options.clearBtn !== undefined) {\n    if (options.clearBtn) {\n      showElement(picker.controls.clearBtn);\n    } else {\n      hideElement(picker.controls.clearBtn);\n    }\n  }\n}\n\n// Compute view date to reset, which will be...\n// - the last item of the selected dates or defaultViewDate if no selection\n// - limitted to minDate or maxDate if it exceeds the range\nfunction computeResetViewDate(datepicker) {\n  const {dates, config} = datepicker;\n  const viewDate = dates.length > 0 ? lastItemOf(dates) : config.defaultViewDate;\n  return limitToRange(viewDate, config.minDate, config.maxDate);\n}\n\n// Change current view's view date\nfunction setViewDate(picker, newDate) {\n  const oldViewDate = new Date(picker.viewDate);\n  const newViewDate = new Date(newDate);\n  const {id, year, first, last} = picker.currentView;\n  const viewYear = newViewDate.getFullYear();\n\n  picker.viewDate = newDate;\n  if (viewYear !== oldViewDate.getFullYear()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeYear');\n  }\n  if (newViewDate.getMonth() !== oldViewDate.getMonth()) {\n    triggerDatepickerEvent(picker.datepicker, 'changeMonth');\n  }\n\n  // return whether the new date is in different period on time from the one\n  // displayed in the current view\n  // when true, the view needs to be re-rendered on the next UI refresh.\n  switch (id) {\n    case 0:\n      return newDate < first || newDate > last;\n    case 1:\n      return viewYear !== year;\n    default:\n      return viewYear < first || viewYear > last;\n  }\n}\n\nfunction getTextDirection(el) {\n  return window.getComputedStyle(el).direction;\n}\n\n// Class representing the picker UI\nexport default class Picker {\n  constructor(datepicker) {\n    this.datepicker = datepicker;\n\n    const template = pickerTemplate.replace(/%buttonClass%/g, datepicker.config.buttonClass);\n    const element = this.element = parseHTML(template).firstChild;\n    const [header, main, footer] = element.firstChild.children;\n    const title = header.firstElementChild;\n    const [prevBtn, viewSwitch, nextBtn] = header.lastElementChild.children;\n    const [todayBtn, clearBtn] = footer.firstChild.children;\n    const controls = {\n      title,\n      prevBtn,\n      viewSwitch,\n      nextBtn,\n      todayBtn,\n      clearBtn,\n    };\n    this.main = main;\n    this.controls = controls;\n\n    const elementClass = datepicker.inline ? 'inline' : 'dropdown';\n    element.classList.add(`datepicker-${elementClass}`);\n    elementClass === 'dropdown' ? element.classList.add('dropdown', 'absolute', 'top-0', 'left-0', 'z-20', 'pt-2') : null;\n\n    processPickerOptions(this, datepicker.config);\n    this.viewDate = computeResetViewDate(datepicker);\n\n    // set up event listeners\n    registerListeners(datepicker, [\n      [element, 'click', onClickPicker.bind(null, datepicker), {capture: true}],\n      [main, 'click', onClickView.bind(null, datepicker)],\n      [controls.viewSwitch, 'click', onClickViewSwitch.bind(null, datepicker)],\n      [controls.prevBtn, 'click', onClickPrevBtn.bind(null, datepicker)],\n      [controls.nextBtn, 'click', onClickNextBtn.bind(null, datepicker)],\n      [controls.todayBtn, 'click', onClickTodayBtn.bind(null, datepicker)],\n      [controls.clearBtn, 'click', onClickClearBtn.bind(null, datepicker)],\n    ]);\n\n    // set up views\n    this.views = [\n      new DaysView(this),\n      new MonthsView(this),\n      new YearsView(this, {id: 2, name: 'years', cellClass: 'year', step: 1}),\n      new YearsView(this, {id: 3, name: 'decades', cellClass: 'decade', step: 10}),\n    ];\n    this.currentView = this.views[datepicker.config.startView];\n\n    this.currentView.render();\n    this.main.appendChild(this.currentView.element);\n    datepicker.config.container.appendChild(this.element);\n  }\n\n  setOptions(options) {\n    processPickerOptions(this, options);\n    this.views.forEach((view) => {\n      view.init(options, false);\n    });\n    this.currentView.render();\n  }\n\n  detach() {\n    this.datepicker.config.container.removeChild(this.element);\n  }\n\n  show() {\n    if (this.active) {\n      return;\n    }\n    this.element.classList.add('active', 'block');\n    this.element.classList.remove('hidden');\n    this.active = true;\n\n    const datepicker = this.datepicker;\n    if (!datepicker.inline) {\n      // ensure picker's direction matches input's\n      const inputDirection = getTextDirection(datepicker.inputField);\n      if (inputDirection !== getTextDirection(datepicker.config.container)) {\n        this.element.dir = inputDirection;\n      } else if (this.element.dir) {\n        this.element.removeAttribute('dir');\n      }\n\n      this.place();\n      if (datepicker.config.disableTouchKeyboard) {\n        datepicker.inputField.blur();\n      }\n    }\n    triggerDatepickerEvent(datepicker, 'show');\n  }\n\n  hide() {\n    if (!this.active) {\n      return;\n    }\n    this.datepicker.exitEditMode();\n    this.element.classList.remove('active', 'block');\n    this.element.classList.add('active', 'block', 'hidden');\n    this.active = false;\n    triggerDatepickerEvent(this.datepicker, 'hide');\n  }\n\n  place() {\n    const {classList, style} = this.element;\n    const {config, inputField} = this.datepicker;\n    const container = config.container;\n    const {\n      width: calendarWidth,\n      height: calendarHeight,\n    } = this.element.getBoundingClientRect();\n    const {\n      left: containerLeft,\n      top: containerTop,\n      width: containerWidth,\n    } = container.getBoundingClientRect();\n    const {\n      left: inputLeft,\n      top: inputTop,\n      width: inputWidth,\n      height: inputHeight\n    } = inputField.getBoundingClientRect();\n    let {x: orientX, y: orientY} = config.orientation;\n    let scrollTop;\n    let left;\n    let top;\n\n    if (container === document.body) {\n      scrollTop = window.scrollY;\n      left = inputLeft + window.scrollX;\n      top = inputTop + scrollTop;\n    } else {\n      scrollTop = container.scrollTop;\n      left = inputLeft - containerLeft;\n      top = inputTop - containerTop + scrollTop;\n    }\n\n    if (orientX === 'auto') {\n      if (left < 0) {\n        // align to the left and move into visible area if input's left edge < window's\n        orientX = 'left';\n        left = 10;\n      } else if (left + calendarWidth > containerWidth) {\n        // align to the right if canlendar's right edge > container's\n        orientX = 'right';\n      } else {\n        orientX = getTextDirection(inputField) === 'rtl' ? 'right' : 'left';\n      }\n    }\n    if (orientX === 'right') {\n      left -= calendarWidth - inputWidth;\n    }\n\n    if (orientY === 'auto') {\n      orientY = top - calendarHeight < scrollTop ? 'bottom' : 'top';\n    }\n    if (orientY === 'top') {\n      top -= calendarHeight;\n    } else {\n      top += inputHeight;\n    }\n\n    classList.remove(\n      'datepicker-orient-top',\n      'datepicker-orient-bottom',\n      'datepicker-orient-right',\n      'datepicker-orient-left'\n    );\n    classList.add(`datepicker-orient-${orientY}`, `datepicker-orient-${orientX}`);\n\n    style.top = top ? `${top}px` : top;\n    style.left = left ? `${left}px` : left;\n  }\n\n  setViewSwitchLabel(labelText) {\n    this.controls.viewSwitch.textContent = labelText;\n  }\n\n  setPrevBtnDisabled(disabled) {\n    this.controls.prevBtn.disabled = disabled;\n  }\n\n  setNextBtnDisabled(disabled) {\n    this.controls.nextBtn.disabled = disabled;\n  }\n\n  changeView(viewId) {\n    const oldView = this.currentView;\n    const newView =  this.views[viewId];\n    if (newView.id !== oldView.id) {\n      this.currentView = newView;\n      this._renderMethod = 'render';\n      triggerDatepickerEvent(this.datepicker, 'changeView');\n      this.main.replaceChild(newView.element, oldView.element);\n    }\n    return this;\n  }\n\n  // Change the focused date (view date)\n  changeFocus(newViewDate) {\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refreshFocus';\n    this.views.forEach((view) => {\n      view.updateFocus();\n    });\n    return this;\n  }\n\n  // Apply the change of the selected dates\n  update() {\n    const newViewDate = computeResetViewDate(this.datepicker);\n    this._renderMethod = setViewDate(this, newViewDate) ? 'render' : 'refresh';\n    this.views.forEach((view) => {\n      view.updateFocus();\n      view.updateSelection();\n    });\n    return this;\n  }\n\n  // Refresh the picker UI\n  render(quickRender = true) {\n    const renderMethod = (quickRender && this._renderMethod) || 'render';\n    delete this._renderMethod;\n\n    this.currentView[renderMethod]();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}