{"ast":null,"code":"var _jsxFileName = \"/Users/albertqi/Desktop/Directory/Votable/client/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport { React, Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Contact from \"./Contact\";\nimport TableHeader from \"./TableHeader\";\nimport { Menu, Transition } from '@headlessui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const [contacts, setContacts] = useState([]); // const fields = [\"Last Name\", \"First Name\", \"Email\", \"Phone Number\", \"House/Yard\", \"Suite\",\n  //   \"Mailbox Center\", \"Mailbox Number\", \"Class Year\", \"Home City\", \"Home State\",\n  //   \"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\", \"Actions\"];\n\n  const fields = [\"Student Information\", \"Contact\", \"Hometown\", \"Campus Location\", \"Status\", \"\"];\n  const [statuses, setStatuses] = useState([true, false, false, false]);\n  const statusFields = [\"contactStatus\", \"ptvStatus\", \"registrationStatus\", \"stageOfVotingProcess\"];\n  const statusText = [\"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\"]; // Get all contacts\n\n  const getContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/contacts\");\n      const jsonData = await response.json();\n      setContacts(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }; // Delete contact\n\n\n  const deleteContact = async id => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      try {\n        const response = await fetch(`http://localhost:8000/contacts/${id}`, {\n          method: \"DELETE\"\n        });\n        setContacts(contacts.filter(contact => contact.id !== id));\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  const handleStatusOnClick = async e => {\n    console.log(e.target.id);\n    let index = statusFields.indexOf(e.target.name);\n    let copy = statuses.slice();\n    copy[index] = !copy[index];\n    if (copy.every(field => !field)) return;\n    setStatuses(copy);\n  };\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [contacts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col mx-6 overflow-x-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-hidden sm:-mx-6 lg:-mx-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-block min-w-full sm:px-6 lg:px-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-hidden shadow-md sm:rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"min-w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"bg-gray-100 dark:bg-gray-700\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: fields.map(field => field === \"Status\" ? /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: /*#__PURE__*/_jsxDEV(Menu, {\n                      as: \"div\",\n                      className: \"relative inline-block text-left\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"ml-4 w-64\",\n                        children: /*#__PURE__*/_jsxDEV(Menu.Button, {\n                          className: \"inline-flex items-center py-3 text-xs font-medium tracking-wider text-left text-gray-700 uppercase dark:text-gray-400\",\n                          children: [\"Status\", /*#__PURE__*/_jsxDEV(\"svg\", {\n                            className: \"ml-1 w-4 h-4\",\n                            fill: \"none\",\n                            stroke: \"currentColor\",\n                            viewBox: \"0 0 24 24\",\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            children: /*#__PURE__*/_jsxDEV(\"path\", {\n                              strokeLinecap: \"round\",\n                              strokeLinejoin: \"round\",\n                              strokeWidth: 2,\n                              d: \"M19 9l-7 7-7-7\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 78,\n                              columnNumber: 152\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 78,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 76,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Transition, {\n                        as: Fragment,\n                        enter: \"transition ease-out duration-100\",\n                        enterFrom: \"transform opacity-0 scale-95\",\n                        enterTo: \"transform opacity-100 scale-100\",\n                        leave: \"transition ease-in duration-75\",\n                        leaveFrom: \"transform opacity-100 scale-100\",\n                        leaveTo: \"transform opacity-0 scale-95\",\n                        children: /*#__PURE__*/_jsxDEV(Menu.Items, {\n                          className: \"origin-top-left absolute left-4 w-60 mt-0.5 rounded-md shadow-lg bg-white ring-1 ring-white focus:outline-none\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"py-1\",\n                            children: statusFields.map((field, index) => /*#__PURE__*/_jsxDEV(Menu.Item, {\n                              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                  role: \"button\",\n                                  className: \"block px-4 py-2 text-gray-700 text-sm font-normal w-full inline-flex items-center\",\n                                  onClick: handleStatusOnClick,\n                                  name: field,\n                                  children: [statusText[index], statuses[index] ? /*#__PURE__*/_jsxDEV(\"svg\", {\n                                    id: field,\n                                    className: \"w-6 h-6 absolute right-4\",\n                                    fill: \"none\",\n                                    stroke: \"currentColor\",\n                                    viewBox: \"0 0 24 24\",\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                                      strokeLinecap: \"round\",\n                                      strokeLinejoin: \"round\",\n                                      strokeWidth: 1.5,\n                                      d: \"M5 13l4 4L19 7\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 103,\n                                      columnNumber: 204\n                                    }, this)\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 103,\n                                    columnNumber: 62\n                                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 96,\n                                  columnNumber: 41\n                                }, this), index === statusFields.length - 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 105,\n                                  columnNumber: 86\n                                }, this)]\n                              }, void 0, true)\n                            }, index, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 94,\n                              columnNumber: 37\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 92,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 91,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 27\n                    }, this)\n                  }, field, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(TableHeader, {\n                    content: field\n                  }, field, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Contact, {\n                  contact: contact,\n                  statuses: statuses,\n                  onDelete: deleteContact\n                }, contact.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"m-3\",\n      children: \"No Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-0 m-10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Table, \"SZHj930v/UHYYHs9kOaPnNPCg1s=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/albertqi/Desktop/Directory/Votable/client/src/components/Table.js"],"names":["React","Fragment","useState","useEffect","Contact","TableHeader","Menu","Transition","Table","contacts","setContacts","fields","statuses","setStatuses","statusFields","statusText","getContacts","response","fetch","jsonData","json","err","console","error","message","deleteContact","id","window","confirm","method","filter","contact","handleStatusOnClick","e","log","target","index","indexOf","name","copy","slice","every","field","length","map"],"mappings":"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","sourcesContent":["import { React, Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Contact from \"./Contact\";\nimport TableHeader from \"./TableHeader\";\nimport { Menu, Transition } from '@headlessui/react';\n\nfunction Table() {\n  const [contacts, setContacts] = useState([]);\n\n  // const fields = [\"Last Name\", \"First Name\", \"Email\", \"Phone Number\", \"House/Yard\", \"Suite\",\n  //   \"Mailbox Center\", \"Mailbox Number\", \"Class Year\", \"Home City\", \"Home State\",\n  //   \"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\", \"Actions\"];\n\n  const fields = [\"Student Information\", \"Contact\", \"Hometown\", \"Campus Location\",\n    \"Status\", \"\"];\n\n  const [statuses, setStatuses] = useState([true, false, false, false]);\n\n  const statusFields = [\"contactStatus\", \"ptvStatus\", \"registrationStatus\", \"stageOfVotingProcess\"];\n  const statusText = [\"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\"];\n\n  // Get all contacts\n  const getContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/contacts\");\n      const jsonData = await response.json();\n\n      setContacts(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  // Delete contact\n  const deleteContact = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      try {\n        const response = await fetch(`http://localhost:8000/contacts/${id}`, {\n          method: \"DELETE\"\n        });\n\n        setContacts(contacts.filter(contact => contact.id !== id));\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  const handleStatusOnClick = async (e) => {\n    console.log(e.target.id);\n    let index = statusFields.indexOf(e.target.name);\n    let copy = statuses.slice();\n    copy[index] = !copy[index];\n    if (copy.every(field => !field)) return;\n    setStatuses(copy);\n  }\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <div className=\"flex flex-col mx-6 overflow-x-hidden\">\n          <div className=\"overflow-x-hidden sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow-md sm:rounded-lg\">\n                <table className=\"min-w-full\">\n                  <thead className=\"bg-gray-100 dark:bg-gray-700\">\n                    <tr>\n                      {fields.map((field) => field === \"Status\" ? (\n                        <th key={field} scope=\"col\">\n                          <Menu as=\"div\" className=\"relative inline-block text-left\">\n                            <div className=\"ml-4 w-64\">\n                              <Menu.Button className=\"inline-flex items-center py-3 text-xs font-medium tracking-wider text-left text-gray-700 uppercase dark:text-gray-400\">\n                                Status\n                                <svg className=\"ml-1 w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" /></svg>\n                              </Menu.Button>\n                            </div>\n\n                            <Transition\n                              as={Fragment}\n                              enter=\"transition ease-out duration-100\"\n                              enterFrom=\"transform opacity-0 scale-95\"\n                              enterTo=\"transform opacity-100 scale-100\"\n                              leave=\"transition ease-in duration-75\"\n                              leaveFrom=\"transform opacity-100 scale-100\"\n                              leaveTo=\"transform opacity-0 scale-95\"\n                            >\n                              <Menu.Items className=\"origin-top-left absolute left-4 w-60 mt-0.5 rounded-md shadow-lg bg-white ring-1 ring-white focus:outline-none\">\n                                <div className=\"py-1\">\n                                  {statusFields.map((field, index) =>\n                                    <Menu.Item key={index}>\n                                      <>\n                                        <button\n                                          role=\"button\"\n                                          className=\"block px-4 py-2 text-gray-700 text-sm font-normal w-full inline-flex items-center\"\n                                          onClick={handleStatusOnClick}\n                                          name={field}\n                                        >\n                                          {statusText[index]}\n                                          {statuses[index] ? <svg id={field} className=\"w-6 h-6 absolute right-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 13l4 4L19 7\" /></svg> : <></>}\n                                        </button>\n                                        {index === statusFields.length - 1 ? <></> : <br />}\n                                      </>\n                                    </Menu.Item>\n                                  )}\n                                </div>\n                              </Menu.Items>\n                            </Transition>\n                          </Menu>\n                        </th>\n                      ) : (\n                        <TableHeader key={field} content={field} />\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {contacts.map((contact) => (\n                      <Contact key={contact.id} contact={contact} statuses={statuses} onDelete={deleteContact} />\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"m-3\">No Contacts</h4>\n      )\n      }\n\n      <div className=\"absolute right-0 m-10\">\n      </div>\n    </>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}