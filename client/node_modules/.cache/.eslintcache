[{"/Users/albertqi/Desktop/Directory/Votable/client/src/index.js":"1","/Users/albertqi/Desktop/Directory/Votable/client/src/App.js":"2","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/About.js":"3","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/TurfSheet.js":"4","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Scripts.js":"5","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/AddContact.js":"6","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/EditScript.js":"7","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/SidebarContainer.js":"8","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/CreateScript.js":"9","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Script.js":"10","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/EditContact.js":"11","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Navbar.js":"12","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Footer.js":"13","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Sidebar.js":"14","/Users/albertqi/Desktop/Directory/Votable/client/src/components/SearchBar.js":"15","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Table.js":"16","/Users/albertqi/Desktop/Directory/Votable/client/src/components/ScriptCard.js":"17","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Tag.js":"18","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Contact.js":"19","/Users/albertqi/Desktop/Directory/Votable/client/src/components/TableHeader.js":"20","/Users/albertqi/Desktop/Directory/Votable/client/src/components/TableCell.js":"21","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Landing.js":"22","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Login.js":"23","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Signup.js":"24","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/ForgotPassword.js":"25","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Features.js":"26","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Contact.js":"27","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/PrivacyPolicy.js":"28","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/TermsOfService.js":"29","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Dashboard.js":"30"},{"size":237,"mtime":1647304123003,"results":"31","hashOfConfig":"32"},{"size":2380,"mtime":1648836303596,"results":"33","hashOfConfig":"32"},{"size":312,"mtime":1647827960271,"results":"34","hashOfConfig":"32"},{"size":5527,"mtime":1648788385642,"results":"35","hashOfConfig":"32"},{"size":7722,"mtime":1648804831702,"results":"36","hashOfConfig":"32"},{"size":11392,"mtime":1648793349932,"results":"37","hashOfConfig":"32"},{"size":8130,"mtime":1647806757721,"results":"38","hashOfConfig":"32"},{"size":242,"mtime":1647674114940,"results":"39","hashOfConfig":"32"},{"size":7948,"mtime":1647806850977,"results":"40","hashOfConfig":"32"},{"size":9285,"mtime":1648793255168,"results":"41","hashOfConfig":"32"},{"size":11394,"mtime":1648793584880,"results":"42","hashOfConfig":"32"},{"size":3775,"mtime":1648836628675,"results":"43","hashOfConfig":"32"},{"size":5423,"mtime":1648808585336,"results":"44","hashOfConfig":"32"},{"size":5609,"mtime":1648801055821,"results":"45","hashOfConfig":"32"},{"size":1597,"mtime":1648784274668,"results":"46","hashOfConfig":"32"},{"size":6027,"mtime":1648804423557,"results":"47","hashOfConfig":"32"},{"size":4051,"mtime":1648805866963,"results":"48","hashOfConfig":"32"},{"size":634,"mtime":1647330836297,"results":"49","hashOfConfig":"32"},{"size":1652,"mtime":1648803807637,"results":"50","hashOfConfig":"32"},{"size":286,"mtime":1648803087937,"results":"51","hashOfConfig":"32"},{"size":269,"mtime":1648804073632,"results":"52","hashOfConfig":"32"},{"size":23006,"mtime":1648836587677,"results":"53","hashOfConfig":"32"},{"size":2233,"mtime":1648811049891,"results":"54","hashOfConfig":"32"},{"size":3249,"mtime":1648836290136,"results":"55","hashOfConfig":"32"},{"size":2931,"mtime":1648811433565,"results":"56","hashOfConfig":"32"},{"size":114,"mtime":1648811520506,"results":"57","hashOfConfig":"32"},{"size":111,"mtime":1648811576773,"results":"58","hashOfConfig":"32"},{"size":129,"mtime":1648811684239,"results":"59","hashOfConfig":"32"},{"size":132,"mtime":1648811657578,"results":"60","hashOfConfig":"32"},{"size":117,"mtime":1648811753215,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"13fqoc3",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/albertqi/Desktop/Directory/Votable/client/src/index.js",[],[],["168","169"],"/Users/albertqi/Desktop/Directory/Votable/client/src/App.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/About.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/TurfSheet.js",["170","171"],[],"import { React, Fragment } from \"react\";\nimport { useState } from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport Table from \"../components/Table\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Transition } from '@headlessui/react';\n\nfunction TurfSheet() {\n\n    function classNames(...classes) {\n        return classes.filter(Boolean).join(' ');\n    }\n\n    const [orderByField, setOrderByField] = useState(\"lastName\");\n    const [orderByOrdering, setOrderByOrdering] = useState(true);   // true = down\n\n    const handleOrderByOnClick = async (e) => {\n        if (e.target.name == null) return;\n        let field = e.target.name;\n        if (orderByField === field) {\n            setOrderByOrdering(!orderByOrdering);\n        } else {\n            setOrderByField(field);\n            setOrderByOrdering(true);\n        }\n    }\n\n    const chevDown = (\n        <svg className=\"w-6 h-6 absolute right-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" /></svg>\n    );\n\n    const chevUp = (\n        <svg className=\"w-6 h-6 absolute right-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 15l7-7 7 7\" /></svg>\n    );\n\n    return (\n        <>\n            <div className=\"inline-flex items-center\">\n                <SearchBar />\n\n\n\n                <Menu as=\"div\" className=\"relative inline-block text-left\">\n                    <Menu.Button className=\"inline-flex items-center text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600\">\n                        Order By\n                        <svg className=\"ml-1 w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" /></svg>\n                    </Menu.Button>\n\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                        <Menu.Items className=\"origin-top-right absolute w-44 rounded-md shadow-lg bg-white focus:outline-none\">\n                            <div className=\"py-1\">\n                                <Menu.Item>\n                                    {({ active }) => (\n                                        <button\n                                            role=\"button\"\n                                            className={classNames(\n                                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                'block px-4 py-2 text-sm font-normal w-full inline-flex items-center'\n                                            )}\n                                            onClick={handleOrderByOnClick}\n                                            name=\"lastName\"\n                                        >\n                                            Last Name\n                                            {orderByField === \"lastName\" ? <>{orderByOrdering ? <>{chevDown}</> : <>{chevUp}</>}</> : <></>}\n                                        </button>\n                                    )}\n                                </Menu.Item>\n                                <Menu.Item>\n                                    {({ active }) => (\n                                        <button\n                                            role=\"button\"\n                                            className={classNames(\n                                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                'block px-4 py-2 text-sm font-normal w-full inline-flex items-center'\n                                            )}\n                                            onClick={handleOrderByOnClick}\n                                            name=\"firstName\"\n                                        >\n                                            First Name\n                                            {orderByField === \"firstName\" ? <>{orderByOrdering ? <>{chevDown}</> : <>{chevUp}</>}</> : <></>}\n                                        </button>\n                                    )}\n                                </Menu.Item>\n                            </div>\n                        </Menu.Items>\n                    </Transition>\n                </Menu>\n\n\n\n                <Link to=\"/contacts/add\" className=\"absolute right-6\">\n                    <button type=\"button\" className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Add Contact</button>\n                </Link>\n            </div>\n            <Table />\n        </>\n    );\n}\n\nexport default TurfSheet;\n",["172","173"],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Scripts.js",["174","175","176","177","178","179"],[],"import { useState, useEffect, Fragment } from \"react\";\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\nimport SearchBar from \"../components/SearchBar\";\nimport ScriptCard from \"../components/ScriptCard\";\nimport { Menu, Transition } from '@headlessui/react';\n\nfunction Scripts() {\n    const [scripts, setScripts] = useState([]);\n\n    // Get all scripts\n    const getScripts = async () => {\n        try {\n            const response = await fetch(\"http://localhost:8000/scripts\");\n            const jsonData = await response.json();\n\n            setScripts(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    // Delete script\n    const deleteScript = async (id) => {\n        if (window.confirm(\"Are you sure you want to delete this script?\")) {\n            try {\n                const response = await fetch(`http://localhost:8000/scripts/${id}`, {\n                    method: \"DELETE\"\n                });\n\n                setScripts(scripts.filter(script => script.id !== id));\n            } catch (error) {\n                console.error(error.message);\n            }\n        }\n    };\n\n    function classNames(...classes) {\n        return classes.filter(Boolean).join(' ');\n    }\n\n    const [orderByField, setOrderByField] = useState(\"lastModified\");\n    const [orderByOrdering, setOrderByOrdering] = useState(true);   // true = down\n\n    const handleOrderByOnClick = async (e) => {\n        if (e.target.name == null) return;\n        let field = e.target.name;\n        if (orderByField === field) {\n            setOrderByOrdering(!orderByOrdering);\n        } else {\n            setOrderByField(field);\n            setOrderByOrdering(true);\n        }\n    }\n\n    const chevDown = (\n        <svg className=\"w-6 h-6 absolute right-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" /></svg>\n    );\n\n    const chevUp = (\n        <svg className=\"w-6 h-6 absolute right-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 15l7-7 7 7\" /></svg>\n    );\n\n    useEffect(() => {\n        getScripts();\n    }, []);\n\n    return (\n        <>\n            <div className=\"inline-flex items-center\">\n                <SearchBar />\n\n\n\n                <Menu as=\"div\" className=\"relative inline-block text-left\">\n                    <Menu.Button className=\"inline-flex items-center text-gray-900 bg-white border border-gray-300 focus:outline-none hover:bg-gray-100 font-medium rounded-lg text-sm px-5 py-2.5 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600\">\n                        Order By\n                        <svg className=\"ml-1 w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M19 9l-7 7-7-7\" /></svg>\n                    </Menu.Button>\n\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                        <Menu.Items className=\"origin-top-right absolute w-44 rounded-md shadow-lg bg-white focus:outline-none\">\n                            <div className=\"py-1\">\n                                <Menu.Item>\n                                    {({ active }) => (\n                                        <button\n                                            role=\"button\"\n                                            className={classNames(\n                                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                'block px-4 py-2 text-sm font-normal w-full inline-flex items-center'\n                                            )}\n                                            onClick={handleOrderByOnClick}\n                                            name=\"lastModified\"\n                                        >\n                                            Last Modified\n                                            {orderByField === \"lastModified\" ? <>{orderByOrdering ? <>{chevDown}</> : <>{chevUp}</>}</> : <></>}\n                                        </button>\n                                    )}\n                                </Menu.Item>\n                                <Menu.Item>\n                                    {({ active }) => (\n                                        <button\n                                            role=\"button\"\n                                            className={classNames(\n                                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                'block px-4 py-2 text-sm font-normal w-full inline-flex items-center'\n                                            )}\n                                            onClick={handleOrderByOnClick}\n                                            name=\"timeCreated\"\n                                        >\n                                            Time Created\n                                            {orderByField === \"timeCreated\" ? <>{orderByOrdering ? <>{chevDown}</> : <>{chevUp}</>}</> : <></>}\n                                        </button>\n                                    )}\n                                </Menu.Item>\n                                <Menu.Item>\n                                    {({ active }) => (\n                                        <button\n                                            role=\"button\"\n                                            className={classNames(\n                                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                'block px-4 py-2 text-sm font-normal w-full inline-flex items-center'\n                                            )}\n                                            onClick={handleOrderByOnClick}\n                                            name=\"alphabetical\"\n                                        >\n                                            Alphabetical\n                                            {orderByField === \"alphabetical\" ? <>{orderByOrdering ? <>{chevDown}</> : <>{chevUp}</>}</> : <></>}\n                                        </button>\n                                    )}\n                                </Menu.Item>\n                            </div>\n                        </Menu.Items>\n                    </Transition>\n                </Menu>\n\n\n\n                <Link to=\"/scripts/create\" className=\"absolute right-6\">\n                    <button type=\"button\" className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Create Script</button>\n                </Link>\n            </div>\n\n            <div className=\"text-center\">\n                {scripts.map((script) => (\n                    <ScriptCard key={script.id} script={script} onDelete={deleteScript} />\n                ))}\n            </div>\n        </>\n    );\n}\n\nexport default Scripts;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/AddContact.js",["180"],[],"import { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nfunction AddContact() {\n  const navigate = useNavigate();\n\n  const [contact, setContact] = useState({\n    \"class_year\": \"First-Year\",\n    \"contact_status\": \"Not Contacted\",\n    \"ptv_status\": \"Not Completed\",\n    \"registration_status\": \"Not Registered\",\n    \"stage_of_voting_process\": \"Unknown\"\n  });\n\n  // Update contact state on input change\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    setContact({\n      ...contact,\n      [name]: value,\n    });\n  };\n\n  // Form validation\n  const validate = () => {\n    let required = [contact.last_name, contact.first_name, contact.email, contact.phone_number,\n    contact.house, contact.suite, contact.mailbox_center, contact.mailbox_number,\n    contact.city, contact.state, contact.class_year, contact.contact_status, contact.ptv_status,\n    contact.registration_status, contact.stage_of_voting_process];\n    for (const i of required) {\n      if (i == null || i.length < 1) return false;\n    }\n    return true;\n  };\n\n  // Add contact\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (!validate()) return;\n    try {\n      const response = await fetch(\n        \"http://localhost:8000/contacts/add/\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(contact)\n        }\n      );\n      navigate(\"/\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <form>\n      <div className=\"m-6 mb-0 bg-white rounded-lg border dark:border-gray-700 dark:bg-gray-800\">\n        <h5 className=\"m-3 text-2xl font-semibold tracking-tight text-gray-900 dark:text-white\">Add Contact</h5>\n      </div>\n      <div className=\"p-6\">\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Last Name</label>\n          <input type=\"text\" name=\"last_name\" value={contact.last_name || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">First Name</label>\n          <input type=\"text\" name=\"first_name\" value={contact.first_name || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Email</label>\n          <input type=\"email\" name=\"email\" value={contact.email || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Phone Number</label>\n          <input type=\"tel\" name=\"phone_number\" value={contact.phone_number || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">House/Yard</label>\n          <input type=\"text\" name=\"house\" value={contact.house || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Suite</label>\n          <input type=\"text\" name=\"suite\" value={contact.suite || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Mailbox Center</label>\n          <input type=\"text\" name=\"mailbox_center\" value={contact.mailbox_center || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Mailbox Number</label>\n          <input type=\"text\" name=\"mailbox_number\" value={contact.mailbox_number || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Home City</label>\n          <input type=\"text\" name=\"city\" value={contact.city || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Home State</label>\n          <input type=\"text\" name=\"state\" value={contact.state || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n\n        <label htmlFor=\"classYear\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Class Year</label>\n        <select name=\"class_year\" id=\"classYear\" onChange={inputChange} value={contact.class_year} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>First-Year</option>\n          <option>Sophomore</option>\n          <option>Junior</option>\n          <option>Senior</option>\n        </select>\n        <label htmlFor=\"contactStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Contact Status</label>\n        <select name=\"contact_status\" id=\"contactStatus\" onChange={inputChange} value={contact.contact_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Contacted</option>\n          <option>No Response</option>\n          <option>Not Contacted</option>\n        </select>\n        <label htmlFor=\"ptvStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">PTV Status</label>\n        <select name=\"ptv_status\" id=\"ptvStatus\" onChange={inputChange} value={contact.ptv_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Full PTV Completed</option>\n          <option>Short PTV Completed</option>\n          <option>Not Completed</option>\n        </select>\n        <label htmlFor=\"registrationStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Registration Status</label>\n        <select name=\"registration_status\" id=\"registrationStatus\" onChange={inputChange} value={contact.registration_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Registered</option>\n          <option>In Progress</option>\n          <option>Not Registered</option>\n        </select>\n        <label htmlFor=\"stageOfVotingProcess\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Stage of Voting Process</label>\n        <select name=\"stage_of_voting_process\" id=\"stageOfVotingProcess\" onChange={inputChange} value={contact.stage_of_voting_process} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Voted In Person</option>\n          <option>Submitted Absentee Ballot</option>\n          <option>Plan To Vote In Person</option>\n          <option>Requested Absentee Ballot</option>\n          <option>Unknown</option>\n        </select>\n      </div>\n\n      <div className=\"pl-6 pb-6\">\n        <button type=\"button\" onClick={onSubmit} className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Add Contact</button>\n        <Link to=\"/contacts\">\n          <button type=\"reset\" className=\"absolute right-6 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\">Discard</button>\n        </Link>\n      </div>\n    </form>\n  );\n}\n\nexport default AddContact;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/EditScript.js",["181","182"],[],"import { React } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\nimport Tag from \"../components/Tag\";\n\nfunction EditScript() {\n    const navigate = useNavigate();\n    const initialScript = useLocation().state;\n\n    const [script, setScript] = useState({\n        ...initialScript,\n        timeline: initialScript.timeline.slice(0, initialScript.timeline.indexOf('T'))\n    });\n    const [tagsInput, setTagsInput] = useState(\"\");\n    const [tags, setTags] = useState(initialScript.tags);\n\n    const fieldNames = [\"First Name\", \"Last Name\", \"House\", \"Suite\", \"Class Year\",\n        \"City\", \"State\", \"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\"];\n    const fieldValues = [\"{first_name}\", \"{last_name}\", \"{house}\", \"{suite}\", \"{class_year}\",\n        \"{city}\", \"{state}\", \"{contact_status}\", \"{ptv_status}\", \"{registration_status}\", \"{stage_of_voting_process}\"];\n\n    // Update script state on input change\n    const inputChange = (e) => {\n        const { name, value } = e.target;\n        setScript({\n            ...script,\n            [name]: value,\n        });\n    };\n\n    // Handle field\n    const handleField = async (e) => {\n        const name = e.target.innerHTML;\n        const scriptElement = document.getElementById(\"scriptBody\");\n        const start = scriptElement.selectionStart, end = scriptElement.selectionEnd;\n        const value = fieldValues[fieldNames.indexOf(name)];\n\n        const update = script.body.slice(0, start) + value + script.body.slice(end);\n\n        await setScript({\n            ...script,\n            body: update,\n        });\n\n        updateCaret(end + value.length);\n    };\n\n    // Update caret position\n    const updateCaret = (i) => {\n        const scriptElement = document.getElementById(\"scriptBody\");\n        scriptElement.focus();\n        scriptElement.setSelectionRange(i, i);\n    };\n\n    // Handle tags input change\n    const tagsInputChange = (e) => {\n        const { value } = e.target;\n        setTagsInput(value);\n    };\n\n    // Handle enter key on tags\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            const { value } = e.target;\n            if (!tags.includes(value) && value.length > 0) {\n                setTags([\n                    ...tags, value\n                ]);\n                setTagsInput(\"\");\n            }\n        }\n    };\n\n    // Delete tag\n    const deleteTag = async (value) => {\n        setTags(tags.filter(tag => tag !== value));\n    };\n\n    // Form validation\n    const validate = () => {\n        let required = [script.title, script.description, script.timeline, script.body];\n        for (const i of required) {\n            if (i == null || i.length < 1) return false;\n        }\n        return true;\n    };\n\n    // Create script\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (!validate()) return;\n        try {\n            const response = await fetch(\n                `http://localhost:8000/scripts/edit/${script.id}`,\n                {\n                    method: \"PUT\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(script)\n                }\n            );\n            navigate(\"/scripts\");\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    useEffect(() => {\n        setScript({\n            ...script,\n            tags: tags,\n        });\n    }, [tags]);\n\n    return (\n        <form>\n            <div className=\"m-6 mb-0 bg-white rounded-lg border dark:border-gray-700 dark:bg-gray-800\">\n                <h5 className=\"m-3 text-2xl font-semibold tracking-tight text-gray-900 dark:text-white\">Edit Script</h5>\n            </div>\n            <div className=\"p-6\">\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Title</label>\n                    <input type=\"text\" name=\"title\" value={script.title || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Description</label>\n                    <input type=\"text\" name=\"description\" value={script.description || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Timeline</label>\n                    <input type=\"date\" name=\"timeline\" value={script.timeline || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Tags (optional)</label>\n                    <input type=\"text\" name=\"tags\" value={tagsInput || \"\"} onChange={tagsInputChange} onKeyDown={handleKeyDown} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                    <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">Click 'Enter' to add tags.</p>\n                    {tags.map((tag) => (\n                        <Tag key={tag} value={tag} onDelete={deleteTag} />\n                    ))}\n                </div>\n                <div>\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Script</label>\n                    <textarea id=\"scriptBody\" type=\"text\" name=\"body\" value={script.body} onChange={inputChange} rows={4} className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Write your script here...\" required />\n                </div>\n                {fieldNames.map((field) => (\n                    <button key={field} onClick={handleField} type=\"button\" className=\"mt-2 mr-2 inline-flex items-center bg-blue-100 hover:bg-blue-200 text-blue-800 text-sm font-medium px-1.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-800 dark:hover:bg-blue-300\">\n                        {field}\n                    </button>\n                ))}\n            </div>\n\n            <div className=\"pl-6 pb-6\">\n                <button type=\"button\" onClick={onSubmit} className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Save</button>\n                <Link to=\"/scripts\">\n                    <button type=\"reset\" className=\"absolute right-6 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\">Cancel</button>\n                </Link>\n            </div>\n        </form>\n    );\n}\n\nexport default EditScript;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/SidebarContainer.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/CreateScript.js",["183","184"],[],"import { React } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport Tag from \"../components/Tag\";\n\nfunction CreateScript() {\n    const navigate = useNavigate();\n\n    const [script, setScript] = useState({ \"body\": \"\" });\n    const [tagsInput, setTagsInput] = useState(\"\");\n    const [tags, setTags] = useState([]);\n\n    const fieldNames = [\"First Name\", \"Last Name\", \"House\", \"Suite\", \"Class Year\",\n        \"City\", \"State\", \"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\"];\n    const fieldValues = [\"{first_name}\", \"{last_name}\", \"{house}\", \"{suite}\", \"{class_year}\",\n        \"{city}\", \"{state}\", \"{contact_status}\", \"{ptv_status}\", \"{registration_status}\", \"{stage_of_voting_process}\"];\n\n    // Update script state on input change\n    const inputChange = (e) => {\n        const { name, value } = e.target;\n        setScript({\n            ...script,\n            [name]: value,\n        });\n    };\n\n    // Handle field\n    const handleField = async (e) => {\n        const name = e.target.innerHTML;\n        const scriptElement = document.getElementById(\"scriptBody\");\n        const start = scriptElement.selectionStart, end = scriptElement.selectionEnd;\n        const value = fieldValues[fieldNames.indexOf(name)];\n\n        const update = script.body.slice(0, start) + value + script.body.slice(end);\n\n        await setScript({\n            ...script,\n            body: update,\n        });\n\n        updateCaret(end + value.length);\n    };\n\n    // Update caret position\n    const updateCaret = (i) => {\n        const scriptElement = document.getElementById(\"scriptBody\");\n        scriptElement.focus();\n        scriptElement.setSelectionRange(i, i);\n    };\n\n    // Handle tags input change\n    const tagsInputChange = (e) => {\n        const { value } = e.target;\n        setTagsInput(value);\n    };\n\n    // Handle enter key on tags\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            const { value } = e.target;\n            if (!tags.includes(value) && value.length > 0) {\n                setTags([\n                    ...tags, value\n                ]);\n                setTagsInput(\"\");\n            }\n        }\n    };\n\n    // Delete tag\n    const deleteTag = async (value) => {\n        setTags(tags.filter(tag => tag !== value));\n    };\n\n    // Form validation\n    const validate = () => {\n        let required = [script.title, script.description, script.timeline, script.body];\n        for (const i of required) {\n            if (i == null || i.length < 1) return false;\n        }\n        return true;\n    };\n\n    // Create script\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (!validate()) return;\n        try {\n            const response = await fetch(\n                \"http://localhost:8000/scripts/create/\",\n                {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(script)\n                }\n            );\n            navigate(\"/scripts\");\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    useEffect(() => {\n        setScript({\n            ...script,\n            tags: tags,\n        });\n    }, [tags]);\n\n    return (\n        <form>\n            <div className=\"m-6 mb-0 bg-white rounded-lg border dark:border-gray-700 dark:bg-gray-800\">\n                <h5 className=\"m-3 text-2xl font-semibold tracking-tight text-gray-900 dark:text-white\">Create Script</h5>\n            </div>\n            <div className=\"p-6\">\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Title</label>\n                    <input type=\"text\" name=\"title\" value={script.title || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Description</label>\n                    <input type=\"text\" name=\"description\" value={script.description || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Timeline</label>\n                    <input type=\"date\" name=\"timeline\" value={script.timeline || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                </div>\n                <div className=\"mb-4\">\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Tags (optional)</label>\n                    <input type=\"text\" name=\"tags\" value={tagsInput || \"\"} onChange={tagsInputChange} onKeyDown={handleKeyDown} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n                    <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">Click 'Enter' to add tags.</p>\n                    {tags.map((tag) => (\n                        <Tag key={tag} value={tag} onDelete={deleteTag} />\n                    ))}\n                </div>\n                <div>\n                    <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Script</label>\n                    <textarea id=\"scriptBody\" type=\"text\" name=\"body\" value={script.body} onChange={inputChange} rows={4} className=\"block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Write your script here...\" required />\n                </div>\n                {fieldNames.map((field) => (\n                    <button key={field} onClick={handleField} type=\"button\" className=\"mt-2 mr-2 inline-flex items-center bg-blue-100 hover:bg-blue-200 text-blue-800 text-sm font-medium px-1.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-800 dark:hover:bg-blue-300\">\n                        {field}\n                    </button>\n                ))}\n            </div>\n\n            <div className=\"pl-6 pb-6\">\n                <button type=\"button\" onClick={onSubmit} className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Create</button>\n                <Link to=\"/scripts\">\n                    <button type=\"reset\" className=\"absolute right-6 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\">Discard</button>\n                </Link>\n            </div>\n        </form>\n    );\n}\n\nexport default CreateScript;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Script.js",["185","186","187","188","189"],[],"import { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport './Script.css';\n\nfunction Script() {\n    const navigate = useNavigate();\n    const initialScript = useLocation().state;\n\n    const [script, setScript] = useState(initialScript);\n    const [contacts, setContacts] = useState([]);\n    const [contactIndex, setContactIndex] = useState(0);\n    const [replacedBody, setReplacedBody] = useState(\"\");\n\n    const contactFieldNames = [\"First Name\", \"Last Name\", \"House/Yard\", \"Suite\", \"Class Year\",\n        \"Home City\", \"Home State\", \"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\"];\n\n    // Update contacts state on input change\n    const inputChange = async (e) => {\n        const { name, value } = e.target;\n        let contactsCopy = [...contacts];\n        contactsCopy[contactIndex][name] = value;\n        await setContacts(contactsCopy);\n        submit();\n    };\n\n    // Update contact\n    const submit = async () => {\n        try {\n            const response = await fetch(\n                `http://localhost:8000/contacts/edit/${contacts[contactIndex].id}`,\n                {\n                    method: \"PUT\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(contacts[contactIndex])\n                }\n            );\n        } catch (error) {\n            console.error(error.message);\n        }\n    };\n\n    // Get all contacts\n    const getContacts = async () => {\n        try {\n            const response = await fetch(\"http://localhost:8000/contacts\");\n            const jsonData = await response.json();\n\n            setContacts(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    // Update script body\n    const updateBody = () => {\n        var updatedBody = script.body;\n        if (contacts[contactIndex] == null) return;\n        const { first_name, last_name, house, suite, class_year, city, state,\n            contact_status, ptv_status, registration_status, stage_of_voting_process } =\n            contacts[contactIndex];\n        const arr = [first_name, last_name, house, suite, class_year, city, state,\n            contact_status, ptv_status, registration_status, stage_of_voting_process];\n        const fieldValues = [\"{first_name}\", \"{last_name}\", \"{house}\", \"{suite}\", \"{class_year}\",\n            \"{city}\", \"{state}\", \"{contact_status}\", \"{ptv_status}\", \"{registration_status}\", \"{stage_of_voting_process}\"];\n        for (let i = 0; i < fieldValues.length; i++) {\n            updatedBody = updatedBody.replaceAll(fieldValues[i], arr[i]);\n        }\n        setReplacedBody(updatedBody);\n    };\n\n    // Get information regarding current contact\n    const getContactInfo = () => {\n        if (contacts[contactIndex] == null) return [];\n        const { first_name, last_name, house, suite, class_year, city, state,\n            contact_status, ptv_status, registration_status, stage_of_voting_process } =\n            contacts[contactIndex];\n        const arr = [first_name, last_name, house, suite, class_year, city, state,\n            contact_status, ptv_status, registration_status, stage_of_voting_process];\n        return arr;\n    }\n\n    // Previous contact\n    const prev = () => {\n        if (contactIndex - 1 < 0) return;\n        setContactIndex(contactIndex - 1);\n    }\n\n    // Next contact\n    const next = () => {\n        if (contactIndex + 1 >= contacts.length) return;\n        setContactIndex(contactIndex + 1);\n    };\n\n    useEffect(() => {\n        getContacts();\n    }, []);\n\n    useEffect(() => {\n        updateBody();\n    }, [contactIndex]);\n\n    useEffect(() => {\n        updateBody();\n    }, [contacts]);\n\n    return (\n        <div className=\"p-6\">\n            <div className=\"inline-flex w-full\">\n                <div className=\"p-6 mr-6 w-full bg-white rounded-lg border border-gray-200 dark:bg-gray-800 dark:border-gray-700\">\n                    <p className=\"script text-lg\">{replacedBody}</p>\n                </div>\n                <div className=\"p-6 w-fit whitespace-nowrap bg-white rounded-lg border border-gray-200 dark:bg-gray-800 dark:border-gray-700\">\n                    {contactFieldNames.map((field, index) => (\n                        <p key={field}>{field}: {getContactInfo()[index]}</p>\n                    ))}\n                </div>\n            </div>\n            <div className=\"p-6 my-6 w-full bg-white rounded-lg border border-gray-200 dark:bg-gray-800 dark:border-gray-700\">\n                <label htmlFor=\"contactStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Contact Status</label>\n                <select name=\"contact_status\" id=\"contactStatus\" onChange={inputChange} value={contacts[contactIndex] == null ? \"\" : contacts[contactIndex].contact_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n                    <option>Contacted</option>\n                    <option>No Response</option>\n                    <option>Not Contacted</option>\n                </select>\n                <label htmlFor=\"ptvStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">PTV Status</label>\n                <select name=\"ptv_status\" id=\"ptvStatus\" onChange={inputChange} value={contacts[contactIndex] == null ? \"\" : contacts[contactIndex].ptv_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n                    <option>Full PTV Completed</option>\n                    <option>Short PTV Completed</option>\n                    <option>Not Completed</option>\n                </select>\n                <label htmlFor=\"registrationStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Registration Status</label>\n                <select name=\"registration_status\" id=\"registrationStatus\" onChange={inputChange} value={contacts[contactIndex] == null ? \"\" : contacts[contactIndex].registration_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n                    <option>Registered</option>\n                    <option>In Progress</option>\n                    <option>Not Registered</option>\n                </select>\n                <label htmlFor=\"stageOfVotingProcess\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Stage of Voting Process</label>\n                <select name=\"stage_of_voting_process\" id=\"stageOfVotingProcess\" onChange={inputChange} value={contacts[contactIndex] == null ? \"\" : contacts[contactIndex].stage_of_voting_process} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n                    <option>Voted In Person</option>\n                    <option>Submitted Absentee Ballot</option>\n                    <option>Plan To Vote In Person</option>\n                    <option>Requested Absentee Ballot</option>\n                    <option>Unknown</option>\n                </select>\n            </div>\n\n            <div className=\"inline-flex mb-6 items-center\">\n                <button type=\"button\" onClick={prev} className=\"relative left-0 text-blue-700 inline-flex items-center hover:text-white border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm pl-1.5 pr-3.5 py-2.5 text-center dark:border-blue-500 dark:text-blue-500 dark:hover:text-white dark:hover:bg-blue-600 dark:focus:ring-blue-800\">\n                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" /></svg>Previous\n                </button>\n                <p className=\"w-48 absolute left-64 right-0 mx-auto text-center\">{contactIndex + 1} of {contacts.length}</p>\n                <button type=\"button\" onClick={next} className=\"absolute right-6 text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm pl-4 pr-2.5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Next\n                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" /></svg>\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default Script;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/pages/EditContact.js",["190"],[],"import { useState } from \"react\";\nimport { useNavigate, useLocation, Link } from \"react-router-dom\";\n\nfunction EditContact() {\n  const navigate = useNavigate();\n  const initialContact = useLocation().state;\n\n  const [contact, setContact] = useState(initialContact);\n\n  // Update contact state on input change\n  const inputChange = (e) => {\n    const { name, value } = e.target;\n    setContact({\n      ...contact,\n      [name]: value,\n    });\n  };\n\n  // Form validation\n  const validate = () => {\n    let required = [contact.last_name, contact.first_name, contact.email, contact.phone_number,\n    contact.house, contact.suite, contact.mailbox_center, contact.mailbox_number,\n    contact.city, contact.state, contact.class_year, contact.contact_status, contact.ptv_status,\n    contact.registration_status, contact.stage_of_voting_process];\n    for (const i of required) {\n      if (i == null || i.length < 1) return false;\n    }\n    return true;\n  };\n\n  // Update contact\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (!validate()) return;\n    try {\n      const response = await fetch(\n        `http://localhost:8000/contacts/edit/${contact.id}`,\n        {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(contact)\n        }\n      );\n      navigate(\"/\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  return (\n    <form>\n      <div className=\"m-6 mb-0 bg-white rounded-lg border dark:border-gray-700 dark:bg-gray-800\">\n        <h5 className=\"m-3 text-2xl font-semibold tracking-tight text-gray-900 dark:text-white\">Edit Contact</h5>\n      </div>\n      <div className=\"p-6\">\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Last Name</label>\n          <input type=\"text\" name=\"last_name\" value={contact.last_name || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">First Name</label>\n          <input type=\"text\" name=\"first_name\" value={contact.first_name || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Email</label>\n          <input type=\"email\" name=\"email\" value={contact.email || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Phone Number</label>\n          <input type=\"tel\" name=\"phone_number\" value={contact.phone_number || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">House/Yard</label>\n          <input type=\"text\" name=\"house\" value={contact.house || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Suite</label>\n          <input type=\"text\" name=\"suite\" value={contact.suite || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Mailbox Center</label>\n          <input type=\"text\" name=\"mailbox_center\" value={contact.mailbox_center || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Mailbox Number</label>\n          <input type=\"text\" name=\"mailbox_number\" value={contact.mailbox_number || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Home City</label>\n          <input type=\"text\" name=\"city\" value={contact.city || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300\">Home State</label>\n          <input type=\"text\" name=\"state\" value={contact.state || \"\"} onChange={inputChange} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" required />\n        </div>\n\n        <label htmlFor=\"classYear\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Class Year</label>\n        <select name=\"class_year\" id=\"classYear\" onChange={inputChange} value={contact == null ? \"\" : contact.class_year} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>First-Year</option>\n          <option>Sophomore</option>\n          <option>Junior</option>\n          <option>Senior</option>\n        </select>\n        <label htmlFor=\"contactStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Contact Status</label>\n        <select name=\"contact_status\" id=\"contactStatus\" onChange={inputChange} value={contact == null ? \"\" : contact.contact_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Contacted</option>\n          <option>No Response</option>\n          <option>Not Contacted</option>\n        </select>\n        <label htmlFor=\"ptvStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">PTV Status</label>\n        <select name=\"ptv_status\" id=\"ptvStatus\" onChange={inputChange} value={contact == null ? \"\" : contact.ptv_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Full PTV Completed</option>\n          <option>Short PTV Completed</option>\n          <option>Not Completed</option>\n        </select>\n        <label htmlFor=\"registrationStatus\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Registration Status</label>\n        <select name=\"registration_status\" id=\"registrationStatus\" onChange={inputChange} value={contact == null ? \"\" : contact.registration_status} className=\"mb-4 bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Registered</option>\n          <option>In Progress</option>\n          <option>Not Registered</option>\n        </select>\n        <label htmlFor=\"stageOfVotingProcess\" className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-gray-400\">Stage of Voting Process</label>\n        <select name=\"stage_of_voting_process\" id=\"stageOfVotingProcess\" onChange={inputChange} value={contact == null ? \"\" : contact.stage_of_voting_process} className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\">\n          <option>Voted In Person</option>\n          <option>Submitted Absentee Ballot</option>\n          <option>Plan To Vote In Person</option>\n          <option>Requested Absentee Ballot</option>\n          <option>Unknown</option>\n        </select>\n      </div>\n\n      <div className=\"pl-6 pb-6\">\n        <button type=\"button\" onClick={onSubmit} className=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Save</button>\n        <Link to=\"/contacts\">\n          <button type=\"reset\" className=\"absolute right-6 text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\">Cancel</button>\n        </Link>\n      </div>\n    </form>\n  );\n}\n\nexport default EditContact;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Navbar.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/components/Footer.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/components/Sidebar.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/components/SearchBar.js",["191"],[],"import { useCallback } from \"react\";\nimport \"./SearchBar.css\";\n\nfunction SearchBar({ onContactsChange }) {\n\n    // Use callbacks to update contacts on input change\n    const inputChange = useCallback(async (e) => {\n        const { value } = e.target;\n        try {\n            const response = await fetch(`http://localhost:8000/contacts/?query=${value}`);\n            const parseResponse = await response.json();\n            onContactsChange(parseResponse);\n        } catch (error) {\n            console.error(error.message);\n        }\n    }, [onContactsChange]);\n\n    return (\n        <div className=\"p-6\">\n            <label htmlFor=\"table-search\" className=\"sr-only\">Search</label>\n            <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n                    <svg className=\"w-5 h-5 text-gray-500 dark:text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clipRule=\"evenodd\" /></svg>\n                </div>\n                <input type=\"text\" id=\"table-search\" className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-80 pl-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"Search\" />\n            </div>\n        </div>\n    );\n}\n\nexport default SearchBar;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Table.js",["192","193"],[],"import { React, Fragment } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Contact from \"./Contact\";\nimport TableHeader from \"./TableHeader\";\nimport { Menu, Transition } from '@headlessui/react';\n\nfunction Table() {\n  const [contacts, setContacts] = useState([]);\n\n  // const fields = [\"Last Name\", \"First Name\", \"Email\", \"Phone Number\", \"House/Yard\", \"Suite\",\n  //   \"Mailbox Center\", \"Mailbox Number\", \"Class Year\", \"Home City\", \"Home State\",\n  //   \"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\", \"Actions\"];\n\n  const fields = [\"Student Information\", \"Contact\", \"Campus Location\", \"Hometown\",\n    \"Status\", \"\"];\n\n  const [statuses, setStatuses] = useState([true, false, false, false]);\n\n  const statusFields = [\"contactStatus\", \"ptvStatus\", \"registrationStatus\", \"stageOfVotingProcess\"];\n  const statusText = [\"Contact Status\", \"PTV Status\", \"Registration Status\", \"Stage of Voting Process\"];\n\n  // Get all contacts\n  const getContacts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/contacts\");\n      const jsonData = await response.json();\n\n      setContacts(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  // Delete contact\n  const deleteContact = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      try {\n        const response = await fetch(`http://localhost:8000/contacts/${id}`, {\n          method: \"DELETE\"\n        });\n\n        setContacts(contacts.filter(contact => contact.id !== id));\n      } catch (error) {\n        console.error(error.message);\n      }\n    }\n  };\n\n  const handleStatusOnClick = async (e) => {\n    if (e.target.name == null) return;\n    let index = statusFields.indexOf(e.target.name);\n    let copy = statuses.slice();\n    copy[index] = !copy[index];\n    if (copy.every(field => !field)) return;\n    setStatuses(copy);\n  }\n\n  useEffect(() => {\n    getContacts();\n  }, []);\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <div className=\"flex flex-col mx-6 mb-6 overflow-x-hidden\">\n          <div className=\"overflow-x-hidden sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full sm:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow-md sm:rounded-lg\">\n                <table className=\"w-full table-fixed\">\n                  <thead className=\"bg-gray-100 dark:bg-gray-700\">\n                    <tr>\n                      {fields.map((field) => field === \"Status\" ? (\n                        <th key={field} scope=\"col\">\n                          <Menu as=\"div\" className=\"relative inline-block text-left\">\n                            <div className=\"ml-4 w-64\">\n                              <Menu.Button className=\"inline-flex items-center py-3 text-xs font-medium tracking-wider text-left text-gray-700 uppercase dark:text-gray-400\">\n                                Status\n                                <svg className=\"ml-1 w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" /></svg>\n                              </Menu.Button>\n                            </div>\n\n                            <Transition\n                              as={Fragment}\n                              enter=\"transition ease-out duration-100\"\n                              enterFrom=\"transform opacity-0 scale-95\"\n                              enterTo=\"transform opacity-100 scale-100\"\n                              leave=\"transition ease-in duration-75\"\n                              leaveFrom=\"transform opacity-100 scale-100\"\n                              leaveTo=\"transform opacity-0 scale-95\"\n                            >\n                              <Menu.Items className=\"origin-top-left absolute left-4 w-60 mt-0.5 rounded-md shadow-lg bg-white ring-1 ring-white focus:outline-none\">\n                                <div className=\"py-1\">\n                                  {statusFields.map((field, index) =>\n                                    <Menu.Item key={index}>\n                                      <>\n                                        <button\n                                          role=\"button\"\n                                          className=\"block px-4 py-2 text-gray-700 text-sm font-normal w-full inline-flex items-center\"\n                                          onClick={handleStatusOnClick}\n                                          name={field}\n                                        >\n                                          {statusText[index]}\n                                          {statuses[index] ? <svg className=\"w-6 h-6 absolute right-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M5 13l4 4L19 7\" /></svg> : <></>}\n                                        </button>\n                                        {index === statusFields.length - 1 ? <></> : <br />}\n                                      </>\n                                    </Menu.Item>\n                                  )}\n                                </div>\n                              </Menu.Items>\n                            </Transition>\n                          </Menu>\n                        </th>\n                      ) : (\n                        <TableHeader key={field} content={field} />\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {contacts.map((contact) => (\n                      <Contact key={contact.id} contact={contact} statuses={statuses} onDelete={deleteContact} />\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"m-3\">No Contacts</h4>\n      )\n      }\n    </>\n  );\n}\n\nexport default Table;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/components/ScriptCard.js",["194","195"],[],"import { Fragment } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Menu, Transition } from '@headlessui/react';\n\nfunction ScriptCard({ script, onDelete }) {\n    const navigate = useNavigate();\n\n    function classNames(...classes) {\n        return classes.filter(Boolean).join(' ');\n    }\n\n    return (\n        <div className=\"w-96 ml-6 mb-6 inline-block bg-white rounded-lg border border-gray-200 shadow-md dark:bg-gray-800 dark:border-gray-700\">\n            <div className=\"flex justify-end px-4 pt-4\">\n                <Menu as=\"div\" className=\"relative inline-block text-left\">\n                    <Menu.Button className=\"inline-flex items-center rounded-lg p-1\">\n                        <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\" /></svg>\n                    </Menu.Button>\n\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                        <Menu.Items className=\"origin-top-right absolute right-0 w-44 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                            <div className=\"py-1\">\n                                <Menu.Item>\n                                    {({ active }) => (\n                                        <button\n                                            role=\"button\"\n                                            className={classNames(\n                                                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                                                'block px-4 py-2 text-sm font-normal w-full inline-flex items-center'\n                                            )}\n                                            onClick={() => onDelete(script.id)}\n                                            name=\"delete\"\n                                        >\n                                            Delete\n                                        </button>\n                                    )}\n                                </Menu.Item>\n                            </div>\n                        </Menu.Items>\n                    </Transition>\n                </Menu>\n            </div>\n            <div className=\"flex flex-col items-center pb-10\">\n                <h5 className=\"mb-1 text-xl font-medium text-gray-900 dark:text-white\">{script.title}</h5>\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">{script.description}</span>\n                <div className=\"flex mt-4 space-x-3 lg:mt-6\">\n                    <button onClick={() => {\n                        navigate(\"/scripts/edit\", { state: script });\n                    }} type=\"button\" className=\"inline-flex items-center py-2 px-4 text-sm font-medium text-center text-gray-900 bg-white rounded-lg border border-gray-300 hover:bg-gray-100 focus:ring-4 focus:ring-blue-300 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-700 dark:focus:ring-gray-800\">Edit</button>\n                    <button onClick={() => {\n                        navigate(\"/script\", { state: script });\n                    }} type=\"button\" className=\"inline-flex items-center py-2 px-4 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\">Canvass\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ScriptCard;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/components/Tag.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/components/Contact.js",["196","197","198","199"],[],"import \"./Contact.css\";\nimport { useNavigate } from \"react-router\";\nimport TableCell from \"./TableCell\";\n\nfunction Contact({ contact, statuses, onDelete }) {\n  const navigate = useNavigate();\n\n  const { last_name, first_name, email, phone_number, house, suite, mailbox_center, mailbox_number,\n    class_year, city, state, contact_status, ptv_status, registration_status, stage_of_voting_process } =\n    contact;\n\n  const arr = [(<>{last_name}, {first_name}<br />{class_year}</>),\n  (<>{email}<br />{phone_number}</>),\n  (<>{house}, {suite}<br />{mailbox_center} {mailbox_number}</>),\n  (<>{city}, {state}</>)];\n\n  const statusFields = [contact_status, ptv_status, registration_status, stage_of_voting_process];\n\n  return (\n    <tr className=\"border-b odd:bg-white even:bg-gray-50 odd:dark:bg-gray-800 even:dark:bg-gray-700 dark:border-gray-600\">\n      {arr.map((field, index) => (\n        // <td key={index} className=\"py-4 px-6 text-sm text-gray-500 whitespace-nowrap dark:text-gray-400\">{field}</td>\n        <TableCell key={index}>{field}</TableCell>\n      ))}\n      <TableCell>{statusFields.filter((_field, index) => statuses[index]).map((field, index) =>\n        <div key={index}>{field}</div>)}\n      </TableCell>\n      <td className=\"text-center py-3 pr-4 text-sm text-gray-500 whitespace-nowrap dark:text-gray-400\">\n        <a\n          className=\"fas fa-edit mr-1\"\n          role=\"button\"\n          onClick={() => {\n            navigate(\"/contacts/edit\", { state: contact });\n          }}\n        />\n        <a className=\"fas fa-trash\" role=\"button\" onClick={() => onDelete(contact.id)} />\n      </td>\n    </tr>\n  );\n}\n\nexport default Contact;\n","/Users/albertqi/Desktop/Directory/Votable/client/src/components/TableHeader.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/components/TableCell.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Landing.js",["200"],[],"import { useLayoutEffect } from \"react\";\n\nfunction Landing() {\n\n    useLayoutEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    return (\n        <div>\n\n            {/* Top section */}\n            <div className=\"bg-white max-w-screen-2xl flex flex-col items-center mr-auto ml-auto pt-16 pr-4 pb-16 pl-4\n   relative lg:flex-row lg:py-32 xl:py-48 md:px-8\">\n                <div className=\"flex w-full h-full justify-center items-center lg:w-1/2 lg:justify-end lg:bottom-0 lg:left-0\n\tlg:items-center\"><img src=\"https://i.ibb.co/x2vnCQc/VOTEABLE-1080-1080-px-2.png\" className=\"h-auto w-full object-contain object-top lg:w-auto\n\tlg:h-full\" /></div>\n                <div className=\"flex justify-end mr-auto ml-auto relative max-w-xl xl:pr-32 lg:max-w-screen-xl\">\n                    <div className=\"mb-16 lg:pr-5 lg:max-w-lg lg:mb-0\">\n                        <div className=\"mb-6 max-w-xl\">\n                            <p className=\"inline-block font-semibold text-xs tracking-wider mb-4 pt-1 pr-3 pb-1 pl-3 uppercase\n\t   bg-green-700 text-gray-200 rounded-2xl\">Voteable</p>\n                            <div className=\"text-gray-900 mb-6 max-w-lg sm:text-4xl sm:leading-none\">\n                                <p className=\"inline-block font-bold text-3xl tracking-tight text-green-700 sm:text-4xl\n\t\tsm:leading-none\">Reimagine Campus Organizing</p>\n                            </div>\n                            <p className=\"text-base text-gray-700 md:text-lg\">Votable is the only campus-first peer-to-peer relational organizing tool, helping student organizers initiate contact with voters across campus and enabling students to use interactive features to request election information.\n                                If you're interested in partnering with us or exploring our product, submit your email below!\n                            </p>\n                        </div>\n                        <div className=\"flex flex-col md:flex-row\"><input type=\"text\" id=\"03176e36-e060-489e-8702-e2e496eb5503\" className=\"h-12\n\t  w-full rounded-md mb-2 pt-3 pr-4 pb-3 pl-4 text-sm font-normal shadow-sm border-1 bg-white text-black\n\t  border-gray-300 md:mr-2 focus:border-green-700 focus:outline-none focus:shadow-outline flex-grow transition\n\t  duration-200 appearance-none\" placeholder=\"Email Address\" /></div>\n                        <div className=\"flex items-center mt-4\"><button className=\"h-12 rounded-md mr-6 pr-6 pl-6\n\t  text-medium font-semibold tracking-wide shadow-md inline-flex items-center justify-center bg-green-700 text-white\n\t  transition duration-200 hover:bg-green-900 focus:shadow-outline focus:outline-none\" style={{ fontFamily: 'Arial' }}>Get\n                            Early Access</button><button className=\"h-12 rounded-md mr-6 pr-6 pl-6 text-medium\n\t  font-semibold tracking-wide shadow-md border border-gray-100 inline-flex items-center justify-center bg-transparent text-green-700\n\t  transition duration-200 hover:bg-green-50 focus:shadow-outline focus:outline-none\" style={{ fontFamily: 'Arial' }}>Request a Demo</button></div>\n                    </div>\n                </div>\n            </div>\n\n            {/* Features */}\n            <section className=\"py-24 md:pb-32 bg-white border-t border-gray-200\" style={{ backgroundImage: 'url(\"flex-ui-assets/elements/pattern-white.svg\")', backgroundPosition: 'center' }}>\n                <div className=\"container px-4 mx-auto\">\n                    <div className=\"md:max-w-4xl mb-12 mx-auto text-center\">\n                        <span className=\"inline-block py-px px-2 mb-4 text-xs leading-5 text-green-500 bg-green-100 font-medium uppercase rounded-full shadow-sm\">Features</span>\n                        <h1 className=\"mb-4 text-3xl md:text-4xl leading-tight font-bold tracking-tighter\">Engage students and faculty across campus</h1>\n                        <p className=\"text-lg md:text-xl text-coolGray-500 font-medium\">With our relational organizing powered solution, you can coordinate every aspect of the Get Out the Vote process all in one consolidated platform.</p>\n                    </div>\n                    <div className=\"flex flex-wrap -mx-4\">\n                        <div className=\"w-full md:w-1/2 lg:w-1/3 px-4\">\n                            <div className=\"h-full p-8 text-center hover:bg-white rounded-md hover:shadow-xl transition duration-200\">\n                                <div className=\"inline-flex h-16 w-16 mb-6 mx-auto items-center justify-center text-white bg-green-700 rounded-lg\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4m0 5c0 2.21-3.582 4-8 4s-8-1.79-8-4\" />\n                                    </svg>\n                                </div>\n                                <h3 className=\"mb-4 text-xl md:text-2xl leading-tight font-bold\">Manage Student Data</h3>\n                                <p className=\"text-coolGray-500 font-medium\">Extensive capabilities to process, edit, import, and export student information.</p>\n                            </div>\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-1/3 px-4\">\n                            <div className=\"h-full p-8 text-center hover:bg-white rounded-md hover:shadow-xl transition duration-200\">\n                                <div className=\"inline-flex h-16 w-16 mb-6 mx-auto items-center justify-center text-white bg-green-700 rounded-lg\">\n                                    <svg width={22} height={12} viewBox=\"0 0 22 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M20.71 1.29C20.617 1.19627 20.5064 1.12188 20.3846 1.07111C20.2627 1.02034 20.132 0.994202 20 0.994202C19.868 0.994202 19.7373 1.02034 19.6154 1.07111C19.4936 1.12188 19.383 1.19627 19.29 1.29L13 7.59L8.71 3.29C8.61704 3.19627 8.50644 3.12188 8.38458 3.07111C8.26272 3.02034 8.13201 2.9942 8 2.9942C7.86799 2.9942 7.73728 3.02034 7.61542 3.07111C7.49356 3.12188 7.38296 3.19627 7.29 3.29L1.29 9.29C1.19627 9.38296 1.12188 9.49356 1.07111 9.61542C1.02034 9.73728 0.994202 9.86799 0.994202 10C0.994202 10.132 1.02034 10.2627 1.07111 10.3846C1.12188 10.5064 1.19627 10.617 1.29 10.71C1.38296 10.8037 1.49356 10.8781 1.61542 10.9289C1.73728 10.9797 1.86799 11.0058 2 11.0058C2.13201 11.0058 2.26272 10.9797 2.38458 10.9289C2.50644 10.8781 2.61704 10.8037 2.71 10.71L8 5.41L12.29 9.71C12.383 9.80373 12.4936 9.87812 12.6154 9.92889C12.7373 9.97966 12.868 10.0058 13 10.0058C13.132 10.0058 13.2627 9.97966 13.3846 9.92889C13.5064 9.87812 13.617 9.80373 13.71 9.71L20.71 2.71C20.8037 2.61704 20.8781 2.50644 20.9289 2.38458C20.9797 2.26272 21.0058 2.13201 21.0058 2C21.0058 1.86799 20.9797 1.73728 20.9289 1.61542C20.8781 1.49356 20.8037 1.38296 20.71 1.29Z\" fill=\"currentColor\" />\n                                    </svg>\n                                </div>\n                                <h3 className=\"mb-4 text-xl md:text-2xl leading-tight font-bold\">Analyze Outreach Efforts</h3>\n                                <p className=\"text-coolGray-500 font-medium\">Get a complete voter status dashboard in the cloud. See activity, engagement and insights on voter turnout all in one place.</p>\n                            </div>\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-1/3 px-4\">\n                            <div className=\"h-full p-8 text-center hover:bg-white rounded-md hover:shadow-xl transition duration-200\">\n                                <div className=\"inline-flex h-16 w-16 mb-6 mx-auto items-center justify-center text-white bg-green-700 rounded-lg\">\n                                    <svg width={22} height={18} viewBox=\"0 0 22 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M11.3 9.22C11.8336 8.75813 12.2616 8.18688 12.5549 7.54502C12.8482 6.90316 13 6.20571 13 5.5C13 4.17392 12.4732 2.90215 11.5355 1.96447C10.5979 1.02678 9.32608 0.5 8 0.5C6.67392 0.5 5.40215 1.02678 4.46447 1.96447C3.52678 2.90215 3 4.17392 3 5.5C2.99999 6.20571 3.1518 6.90316 3.44513 7.54502C3.73845 8.18688 4.16642 8.75813 4.7 9.22C3.30014 9.85388 2.11247 10.8775 1.27898 12.1685C0.445495 13.4596 0.00147185 14.9633 0 16.5C0 16.7652 0.105357 17.0196 0.292893 17.2071C0.48043 17.3946 0.734784 17.5 1 17.5C1.26522 17.5 1.51957 17.3946 1.70711 17.2071C1.89464 17.0196 2 16.7652 2 16.5C2 14.9087 2.63214 13.3826 3.75736 12.2574C4.88258 11.1321 6.4087 10.5 8 10.5C9.5913 10.5 11.1174 11.1321 12.2426 12.2574C13.3679 13.3826 14 14.9087 14 16.5C14 16.7652 14.1054 17.0196 14.2929 17.2071C14.4804 17.3946 14.7348 17.5 15 17.5C15.2652 17.5 15.5196 17.3946 15.7071 17.2071C15.8946 17.0196 16 16.7652 16 16.5C15.9985 14.9633 15.5545 13.4596 14.721 12.1685C13.8875 10.8775 12.6999 9.85388 11.3 9.22ZM8 8.5C7.40666 8.5 6.82664 8.32405 6.33329 7.99441C5.83994 7.66476 5.45542 7.19623 5.22836 6.64805C5.0013 6.09987 4.94189 5.49667 5.05764 4.91473C5.1734 4.33279 5.45912 3.79824 5.87868 3.37868C6.29824 2.95912 6.83279 2.6734 7.41473 2.55764C7.99667 2.44189 8.59987 2.5013 9.14805 2.72836C9.69623 2.95542 10.1648 3.33994 10.4944 3.83329C10.8241 4.32664 11 4.90666 11 5.5C11 6.29565 10.6839 7.05871 10.1213 7.62132C9.55871 8.18393 8.79565 8.5 8 8.5ZM17.74 8.82C18.38 8.09933 18.798 7.20905 18.9438 6.25634C19.0896 5.30362 18.9569 4.32907 18.5618 3.45C18.1666 2.57093 17.5258 1.8248 16.7165 1.30142C15.9071 0.77805 14.9638 0.499742 14 0.5C13.7348 0.5 13.4804 0.605357 13.2929 0.792893C13.1054 0.98043 13 1.23478 13 1.5C13 1.76522 13.1054 2.01957 13.2929 2.20711C13.4804 2.39464 13.7348 2.5 14 2.5C14.7956 2.5 15.5587 2.81607 16.1213 3.37868C16.6839 3.94129 17 4.70435 17 5.5C16.9986 6.02524 16.8593 6.5409 16.5961 6.99542C16.3328 7.44994 15.9549 7.82738 15.5 8.09C15.3517 8.17552 15.2279 8.29766 15.1404 8.44474C15.0528 8.59182 15.0045 8.7589 15 8.93C14.9958 9.09976 15.0349 9.2678 15.1137 9.41826C15.1924 9.56872 15.3081 9.69665 15.45 9.79L15.84 10.05L15.97 10.12C17.1754 10.6917 18.1923 11.596 18.901 12.7263C19.6096 13.8566 19.9805 15.1659 19.97 16.5C19.97 16.7652 20.0754 17.0196 20.2629 17.2071C20.4504 17.3946 20.7048 17.5 20.97 17.5C21.2352 17.5 21.4896 17.3946 21.6771 17.2071C21.8646 17.0196 21.97 16.7652 21.97 16.5C21.9782 14.9654 21.5938 13.4543 20.8535 12.1101C20.1131 10.7659 19.0413 9.63331 17.74 8.82Z\" fill=\"currentColor\" />\n                                    </svg>\n                                </div>\n                                <h3 className=\"mb-4 text-xl md:text-2xl leading-tight font-bold\">Create Custom Campaigns</h3>\n                                <p className=\"text-coolGray-500 font-medium\">Write customized scripts to specifically target student populations using script builder features.</p>\n                            </div>\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-1/3 px-4\">\n                            <div className=\"h-full p-8 text-center hover:bg-white rounded-md hover:shadow-xl transition duration-200\">\n                                <div className=\"inline-flex h-16 w-16 mb-6 mx-auto items-center justify-center text-white bg-green-700 rounded-lg\">\n                                    <svg width={24} height={24} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M5 18H9.24C9.37161 18.0008 9.50207 17.9755 9.62391 17.9258C9.74574 17.876 9.85656 17.8027 9.95 17.71L16.87 10.78L19.71 8C19.8037 7.90704 19.8781 7.79644 19.9289 7.67458C19.9797 7.55272 20.0058 7.42201 20.0058 7.29C20.0058 7.15799 19.9797 7.02728 19.9289 6.90542C19.8781 6.78356 19.8037 6.67296 19.71 6.58L15.47 2.29C15.377 2.19627 15.2664 2.12188 15.1446 2.07111C15.0227 2.02034 14.892 1.9942 14.76 1.9942C14.628 1.9942 14.4973 2.02034 14.3754 2.07111C14.2536 2.12188 14.143 2.19627 14.05 2.29L11.23 5.12L4.29 12.05C4.19732 12.1434 4.12399 12.2543 4.07423 12.3761C4.02446 12.4979 3.99924 12.6284 4 12.76V17C4 17.2652 4.10536 17.5196 4.29289 17.7071C4.48043 17.8946 4.73478 18 5 18ZM14.76 4.41L17.59 7.24L16.17 8.66L13.34 5.83L14.76 4.41ZM6 13.17L11.93 7.24L14.76 10.07L8.83 16H6V13.17ZM21 20H3C2.73478 20 2.48043 20.1054 2.29289 20.2929C2.10536 20.4804 2 20.7348 2 21C2 21.2652 2.10536 21.5196 2.29289 21.7071C2.48043 21.8946 2.73478 22 3 22H21C21.2652 22 21.5196 21.8946 21.7071 21.7071C21.8946 21.5196 22 21.2652 22 21C22 20.7348 21.8946 20.4804 21.7071 20.2929C21.5196 20.1054 21.2652 20 21 20Z\" fill=\"currentColor\" />\n                                    </svg>\n                                </div>\n                                <h3 className=\"mb-4 text-xl md:text-2xl leading-tight font-bold\">Generate Targeted Turfs</h3>\n                                <p className=\"text-coolGray-500 font-medium\">Target outreach by state, class year, residential location and more with custom turfs.</p>\n                            </div>\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-1/3 px-4\">\n                            <div className=\"h-full p-8 text-center hover:bg-white rounded-md hover:shadow-xl transition duration-200\">\n                                <div className=\"inline-flex h-16 w-16 mb-6 mx-auto items-center justify-center text-white bg-green-700 rounded-lg\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                                    </svg>\n                                </div>\n                                <h3 className=\"mb-4 text-xl md:text-2xl leading-tight font-bold\">Coordinate Campus Organizers</h3>\n                                <p className=\"text-coolGray-500 font-medium\">End-to-end calendar, deliverable, and task-management system built into Votable.</p>\n                            </div>\n                        </div>\n                        <div className=\"w-full md:w-1/2 lg:w-1/3 px-4\">\n                            <div className=\"h-full p-8 text-center hover:bg-white rounded-md hover:shadow-xl transition duration-200\">\n                                <div className=\"inline-flex h-16 w-16 mb-6 mx-auto items-center justify-center text-white bg-green-700 rounded-lg\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\" />\n                                    </svg>\n                                </div>\n                                <h3 className=\"mb-4 text-xl md:text-2xl leading-tight font-bold\">Communicate Across Campus</h3>\n                                <p className=\"text-coolGray-500 font-medium\">Built-in messaging features to communicate to students across campus via text, email, and more.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            {/* Bottom card */}\n            <div className=\"bg-gray-100 w-full pt-20\">\n                <div className=\"mt-8 pb-16 sm:mt-12 sm:pb-20 lg:pb-28\">\n                    <div className=\"relative\">\n                        <div className=\"absolute inset-0 h-1/2\" />\n                        <div className=\"relative max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8\">\n                            <div className=\"max-w-lg mx-auto rounded-lg shadow-lg overflow-hidden lg:max-w-none lg:flex\">\n                                <div className=\"bg-white px-6 py-8 lg:flex-shrink-1 lg:p-12\">\n                                    <h3 className=\"text-2xl leading-8 font-extrabold text-gray-900 sm:text-3xl sm:leading-9\">\n                                        Interested in bringing Voteable to your campus\n                                    </h3>\n                                    <p className=\"mt-6 text-base leading-6 text-gray-500\">\n                                        Get access to the premier suite of student-centered relational organizing tools to help get out the vote on your campus.\n                                    </p>\n                                    <div className=\"mt-8\">\n                                        <div className=\"flex items-center\">\n                                            <h4 className=\"flex-shrink-0 pr-4 bg-white text-sm leading-5 tracking-wider font-semibold uppercase text-indigo-600\">\n                                                What's Included\n                                            </h4>\n                                            <div className=\"flex-1 border-t-2 border-gray-200\" />\n                                        </div>\n                                        <ul className=\"mt-8 lg:grid lg:grid-cols-2 lg:col-gap-8 lg:row-gap-5\">\n                                            <li className=\"flex items-start lg:col-span-1\">\n                                                <div className=\"flex-shrink-0\">\n                                                    <svg className=\"h-5 w-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                                                    </svg>\n                                                </div>\n                                                <p className=\"ml-3 text-sm leading-5 text-gray-700\">\n                                                    Unlimited organizers\n                                                </p>\n                                            </li>\n                                            <li className=\"mt-5 flex items-start lg:col-span-1 lg:mt-0\">\n                                                <div className=\"flex-shrink-0\">\n                                                    <svg className=\"h-5 w-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                                                    </svg>\n                                                </div>\n                                                <p className=\"ml-3 text-sm leading-5 text-gray-700\">\n                                                    Ability to send emails, texts, and push notifications\n                                                </p>\n                                            </li>\n                                            <li className=\"mt-5 flex items-start lg:col-span-1 lg:mt-0\">\n                                                <div className=\"flex-shrink-0\">\n                                                    <svg className=\"h-5 w-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                                                    </svg>\n                                                </div>\n                                                <p className=\"ml-3 text-sm leading-5 text-gray-700\">\n                                                    Built-in administration and scheduling platform\n                                                </p>\n                                            </li>\n                                            <li className=\"mt-5 flex items-start lg:col-span-1 lg:mt-0\">\n                                                <div className=\"flex-shrink-0\">\n                                                    <svg className=\"h-5 w-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                                                    </svg>\n                                                </div>\n                                                <p className=\"ml-3 text-sm leading-5 text-gray-700\">\n                                                    Unlimited student and dorm contacts\n                                                </p>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                                <div className=\"py-8 px-6 text-center bg-gray-50 lg:flex-shrink-0 lg:flex lg:flex-col lg:justify-center lg:p-12\">\n                                    <div className=\"mt-4 flex items-center justify-center text-5xl leading-none font-extrabold text-gray-900\">\n                                        <span>\n                                            Contact us\n                                        </span>\n                                    </div>\n                                    <p className=\"text-lg leading-6 font-medium text-gray-900 pt-2\">\n                                        for campus-specific quotes\n                                    </p>\n                                    <div className=\"mt-6\">\n                                        <div className=\"rounded-md shadow\">\n                                            <a href=\"mailto:voteschallenge@harvard.edu?subject=Voteable%20Inquiry\" className=\"flex items-center justify-center px-5 py-3 border border-transparent text-base leading-6 font-medium rounded-md text-white bg-green-700 hover:bg-gray-800 focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\">\n                                                Let's get out the vote!\n                                            </a>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Landing;\n",["201","202"],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Login.js",[],[],["203","204"],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Signup.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/ForgotPassword.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Features.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Contact.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/PrivacyPolicy.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/TermsOfService.js",[],[],"/Users/albertqi/Desktop/Directory/Votable/client/src/pages/Dashboard.js",[],[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":62,"column":41,"nodeType":"211","endLine":70,"endColumn":42},{"ruleId":"209","severity":1,"message":"210","line":78,"column":41,"nodeType":"211","endLine":86,"endColumn":42},{"ruleId":"205","replacedBy":"212"},{"ruleId":"207","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":21},{"ruleId":"214","severity":1,"message":"218","line":2,"column":23,"nodeType":"216","messageId":"217","endLine":2,"endColumn":34},{"ruleId":"214","severity":1,"message":"219","line":26,"column":23,"nodeType":"216","messageId":"217","endLine":26,"endColumn":31},{"ruleId":"209","severity":1,"message":"210","line":93,"column":41,"nodeType":"211","endLine":101,"endColumn":42},{"ruleId":"209","severity":1,"message":"210","line":109,"column":41,"nodeType":"211","endLine":117,"endColumn":42},{"ruleId":"209","severity":1,"message":"210","line":125,"column":41,"nodeType":"211","endLine":133,"endColumn":42},{"ruleId":"214","severity":1,"message":"219","line":41,"column":13,"nodeType":"216","messageId":"217","endLine":41,"endColumn":21},{"ruleId":"214","severity":1,"message":"219","line":93,"column":19,"nodeType":"216","messageId":"217","endLine":93,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":112,"column":8,"nodeType":"222","endLine":112,"endColumn":14,"suggestions":"223"},{"ruleId":"214","severity":1,"message":"219","line":89,"column":19,"nodeType":"216","messageId":"217","endLine":89,"endColumn":27},{"ruleId":"220","severity":1,"message":"221","line":108,"column":8,"nodeType":"222","endLine":108,"endColumn":14,"suggestions":"224"},{"ruleId":"214","severity":1,"message":"225","line":6,"column":11,"nodeType":"216","messageId":"217","endLine":6,"endColumn":19},{"ruleId":"214","severity":1,"message":"226","line":9,"column":20,"nodeType":"216","messageId":"217","endLine":9,"endColumn":29},{"ruleId":"214","severity":1,"message":"219","line":29,"column":19,"nodeType":"216","messageId":"217","endLine":29,"endColumn":27},{"ruleId":"220","severity":1,"message":"227","line":100,"column":8,"nodeType":"222","endLine":100,"endColumn":22,"suggestions":"228"},{"ruleId":"220","severity":1,"message":"227","line":104,"column":8,"nodeType":"222","endLine":104,"endColumn":18,"suggestions":"229"},{"ruleId":"214","severity":1,"message":"219","line":36,"column":13,"nodeType":"216","messageId":"217","endLine":36,"endColumn":21},{"ruleId":"214","severity":1,"message":"230","line":7,"column":11,"nodeType":"216","messageId":"217","endLine":7,"endColumn":22},{"ruleId":"214","severity":1,"message":"219","line":38,"column":15,"nodeType":"216","messageId":"217","endLine":38,"endColumn":23},{"ruleId":"209","severity":1,"message":"210","line":96,"column":41,"nodeType":"211","endLine":101,"endColumn":42},{"ruleId":"214","severity":1,"message":"231","line":2,"column":23,"nodeType":"216","messageId":"217","endLine":2,"endColumn":27},{"ruleId":"209","severity":1,"message":"210","line":33,"column":41,"nodeType":"211","endLine":41,"endColumn":42},{"ruleId":"232","severity":1,"message":"233","line":29,"column":9,"nodeType":"211","endLine":35,"endColumn":11},{"ruleId":"234","severity":1,"message":"235","line":29,"column":9,"nodeType":"211","endLine":35,"endColumn":11},{"ruleId":"232","severity":1,"message":"233","line":36,"column":9,"nodeType":"211","endLine":36,"endColumn":90},{"ruleId":"234","severity":1,"message":"235","line":36,"column":9,"nodeType":"211","endLine":36,"endColumn":90},{"ruleId":"236","severity":1,"message":"237","line":16,"column":19,"nodeType":"211","endLine":17,"endColumn":15},{"ruleId":"205","replacedBy":"238"},{"ruleId":"207","replacedBy":"239"},{"ruleId":"205","replacedBy":"240"},{"ruleId":"207","replacedBy":"241"},"no-native-reassign",["242"],"no-negated-in-lhs",["243"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["242"],["243"],"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'script'. Either include it or remove the dependency array. You can also do a functional update 'setScript(s => ...)' if you only need 'script' in the 'setScript' call.","ArrayExpression",["244"],["245"],"'navigate' is assigned a value but never used.","'setScript' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateBody'. Either include it or remove the dependency array.",["246"],["247"],"'inputChange' is assigned a value but never used.","'Link' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["242"],["243"],["242"],["243"],"no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"248","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [script, tags]",{"range":"255","text":"256"},{"range":"257","text":"256"},"Update the dependencies array to be: [contactIndex, updateBody]",{"range":"258","text":"259"},"Update the dependencies array to be: [contacts, updateBody]",{"range":"260","text":"261"},[3490,3496],"[script, tags]",[3301,3307],[3649,3663],"[contactIndex, updateBody]",[3718,3728],"[contacts, updateBody]"]